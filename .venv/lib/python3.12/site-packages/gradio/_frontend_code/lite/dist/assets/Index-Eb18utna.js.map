{"version":3,"file":"Index-Eb18utna.js","sources":["../../../dataframe/shared/EditableCell.svelte","../../../dataframe/shared/VirtualTable.svelte","../../../dataframe/shared/CellMenuIcons.svelte","../../../dataframe/shared/CellMenu.svelte","../../../dataframe/shared/Toolbar.svelte","../../../dataframe/shared/selection_utils.ts","../../../dataframe/shared/table_utils.ts","../../../dataframe/shared/Table.svelte","../../../dataframe/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { MarkdownCode } from \"@gradio/markdown-code\";\n\n\texport let edit: boolean;\n\texport let value: string | number = \"\";\n\texport let display_value: string | null = null;\n\texport let styling = \"\";\n\texport let header = false;\n\texport let datatype:\n\t\t| \"str\"\n\t\t| \"markdown\"\n\t\t| \"html\"\n\t\t| \"number\"\n\t\t| \"bool\"\n\t\t| \"date\" = \"str\";\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let clear_on_focus = false;\n\texport let line_breaks = true;\n\texport let editable = true;\n\texport let root: string;\n\texport let max_chars: number | null = null;\n\n\tconst dispatch = createEventDispatcher();\n\tlet is_expanded = false;\n\n\texport let el: HTMLInputElement | null;\n\t$: _value = value;\n\n\tfunction truncate_text(\n\t\ttext: string | number,\n\t\tmax_length: number | null = null\n\t): string {\n\t\tconst str = String(text);\n\t\tif (!max_length || str.length <= max_length) return str;\n\t\treturn str.slice(0, max_length) + \"...\";\n\t}\n\n\t$: display_text = is_expanded\n\t\t? value\n\t\t: truncate_text(display_value || value, max_chars);\n\n\tfunction use_focus(node: HTMLInputElement): any {\n\t\tif (clear_on_focus) {\n\t\t\t_value = \"\";\n\t\t}\n\n\t\trequestAnimationFrame(() => {\n\t\t\tnode.focus();\n\t\t});\n\n\t\treturn {};\n\t}\n\n\tfunction handle_blur({\n\t\tcurrentTarget\n\t}: Event & {\n\t\tcurrentTarget: HTMLInputElement;\n\t}): void {\n\t\tvalue = currentTarget.value;\n\t\tdispatch(\"blur\");\n\t}\n\n\tfunction handle_keydown(event: KeyboardEvent): void {\n\t\tif (event.key === \"Enter\") {\n\t\t\tif (edit) {\n\t\t\t\tvalue = _value;\n\t\t\t\tdispatch(\"blur\");\n\t\t\t} else if (!header) {\n\t\t\t\tis_expanded = !is_expanded;\n\t\t\t}\n\t\t}\n\t\tdispatch(\"keydown\", event);\n\t}\n\n\tfunction handle_click(): void {\n\t\tif (!edit && !header) {\n\t\t\tis_expanded = !is_expanded;\n\t\t}\n\t}\n</script>\n\n{#if edit}\n\t<input\n\t\trole=\"textbox\"\n\t\tbind:this={el}\n\t\tbind:value={_value}\n\t\tclass:header\n\t\ttabindex=\"-1\"\n\t\ton:blur={handle_blur}\n\t\ton:mousedown|stopPropagation\n\t\ton:mouseup|stopPropagation\n\t\ton:click|stopPropagation\n\t\tuse:use_focus\n\t\ton:keydown={handle_keydown}\n\t/>\n{/if}\n\n<span\n\ton:click={handle_click}\n\ton:keydown={handle_keydown}\n\ttabindex=\"0\"\n\trole=\"button\"\n\tclass:edit\n\tclass:expanded={is_expanded}\n\tclass:multiline={header}\n\ton:focus|preventDefault\n\tstyle={styling}\n\tclass=\"table-cell-text\"\n\tdata-editable={editable}\n\tplaceholder=\" \"\n>\n\t{#if datatype === \"html\"}\n\t\t{@html display_text}\n\t{:else if datatype === \"markdown\"}\n\t\t<MarkdownCode\n\t\t\tmessage={display_text.toLocaleString()}\n\t\t\t{latex_delimiters}\n\t\t\t{line_breaks}\n\t\t\tchatbot={false}\n\t\t\t{root}\n\t\t/>\n\t{:else}\n\t\t{editable ? display_text : display_value || display_text}\n\t{/if}\n</span>\n\n<style>\n\tinput {\n\t\tposition: absolute;\n\t\ttop: var(--size-2);\n\t\tright: var(--size-2);\n\t\tbottom: var(--size-2);\n\t\tleft: var(--size-2);\n\t\tflex: 1 1 0%;\n\t\ttransform: translateX(-0.1px);\n\t\toutline: none;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t\tcursor: text;\n\t}\n\n\tspan {\n\t\tflex: 1 1 0%;\n\t\tposition: relative;\n\t\tdisplay: inline-block;\n\t\toutline: none;\n\t\tpadding: var(--size-2);\n\t\t-webkit-user-select: text;\n\t\t-moz-user-select: text;\n\t\t-ms-user-select: text;\n\t\tuser-select: text;\n\t\tcursor: text;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\tinput:where(:not(.header), [data-editable=\"true\"]) {\n\t\twidth: calc(100% - var(--size-10));\n\t}\n\n\tspan.expanded {\n\t\theight: auto;\n\t\tmin-height: 100%;\n\t\twhite-space: pre-wrap;\n\t\tword-break: break-word;\n\t\twhite-space: normal;\n\t}\n\n\t.multiline {\n\t\twhite-space: pre-line;\n\t}\n\n\t.header {\n\t\ttransform: translateX(0);\n\t\tfont-weight: var(--weight-bold);\n\t\twhite-space: normal;\n\t\tword-break: break-word;\n\t}\n\n\t.edit {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount, tick } from \"svelte\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let items: any[][] = [];\n\n\texport let max_height: number;\n\texport let actual_height: number;\n\texport let table_scrollbar_width: number;\n\texport let start = 0;\n\texport let end = 20;\n\texport let selected: number | false;\n\tlet height = \"100%\";\n\n\tlet average_height = 30;\n\tlet bottom = 0;\n\tlet contents: HTMLTableSectionElement;\n\tlet head_height = 0;\n\tlet foot_height = 0;\n\tlet height_map: number[] = [];\n\tlet mounted: boolean;\n\tlet rows: HTMLCollectionOf<HTMLTableRowElement>;\n\tlet top = 0;\n\tlet viewport: HTMLTableElement;\n\tlet viewport_height = 200;\n\tlet visible: { index: number; data: any[] }[] = [];\n\tlet viewport_box: DOMRectReadOnly;\n\n\t$: viewport_height = viewport_box?.height || 200;\n\n\tconst is_browser = typeof window !== \"undefined\";\n\tconst raf = is_browser\n\t\t? window.requestAnimationFrame\n\t\t: (cb: (...args: any[]) => void) => cb();\n\n\t$: mounted && raf(() => refresh_height_map(sortedItems));\n\n\tlet content_height = 0;\n\tasync function refresh_height_map(_items: typeof items): Promise<void> {\n\t\tif (viewport_height === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { scrollTop } = viewport;\n\t\ttable_scrollbar_width = viewport.offsetWidth - viewport.clientWidth;\n\n\t\tcontent_height = top - (scrollTop - head_height);\n\t\tlet i = start;\n\n\t\twhile (content_height < max_height && i < _items.length) {\n\t\t\tlet row = rows[i - start];\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\t\t\tlet _h = row?.getBoundingClientRect().height;\n\t\t\tif (!_h) {\n\t\t\t\t_h = average_height;\n\t\t\t}\n\t\t\tconst row_height = (height_map[i] = _h);\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\t\tconst remaining = _items.length - end;\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tcontent_height += scrollbar_height;\n\t\t}\n\n\t\tlet filtered_height_map = height_map.filter((v) => typeof v === \"number\");\n\t\taverage_height =\n\t\t\tfiltered_height_map.reduce((a, b) => a + b, 0) /\n\t\t\tfiltered_height_map.length;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = _items.length;\n\t\tawait tick();\n\t\tif (!max_height) {\n\t\t\tactual_height = content_height + 1;\n\t\t} else if (content_height < max_height) {\n\t\t\tactual_height = content_height + 2;\n\t\t} else {\n\t\t\tactual_height = max_height;\n\t\t}\n\n\t\tawait tick();\n\t}\n\n\t$: scroll_and_render(selected);\n\n\tasync function scroll_and_render(n: number | false): Promise<void> {\n\t\traf(async () => {\n\t\t\tif (typeof n !== \"number\") return;\n\t\t\tconst direction = typeof n !== \"number\" ? false : is_in_view(n);\n\t\t\tif (direction === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (direction === \"back\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" });\n\t\t\t}\n\n\t\t\tif (direction === \"forwards\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" }, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction is_in_view(n: number): \"back\" | \"forwards\" | true {\n\t\tconst current = rows && rows[n - start];\n\t\tif (!current && n < start) {\n\t\t\treturn \"back\";\n\t\t}\n\t\tif (!current && n >= end - 1) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\tconst { top: viewport_top } = viewport.getBoundingClientRect();\n\t\tconst { top, bottom } = current.getBoundingClientRect();\n\n\t\tif (top - viewport_top < 37) {\n\t\t\treturn \"back\";\n\t\t}\n\n\t\tif (bottom - viewport_top > viewport_height) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction get_computed_px_amount(elem: HTMLElement, property: string): number {\n\t\tif (!elem) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst compStyle = getComputedStyle(elem);\n\n\t\tlet x = parseInt(compStyle.getPropertyValue(property));\n\t\treturn x;\n\t}\n\n\tasync function handle_scroll(e: Event): Promise<void> {\n\t\tconst scroll_top = viewport.scrollTop;\n\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tconst is_start_overflow = sortedItems.length < start;\n\n\t\tconst row_top_border = get_computed_px_amount(rows[1], \"border-top-width\");\n\n\t\tconst actual_border_collapsed_width = 0;\n\n\t\tif (is_start_overflow) {\n\t\t\tawait scroll_to_index(sortedItems.length - 1, { behavior: \"auto\" });\n\t\t}\n\n\t\tlet new_start = 0;\n\t\t// acquire height map for currently visible rows\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = rows[v].getBoundingClientRect().height;\n\t\t}\n\t\tlet i = 0;\n\t\t// start from top: thead, with its borders, plus the first border to afterwards neglect\n\t\tlet y = head_height + row_top_border / 2;\n\t\tlet row_heights = [];\n\t\t// loop items to find new start\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\trow_heights[i] = row_height;\n\t\t\t// we only want to jump if the full (incl. border) row is away\n\t\t\tif (y + row_height + actual_border_collapsed_width > scroll_top) {\n\t\t\t\t// this is the last index still inside the viewport\n\t\t\t\tnew_start = i;\n\t\t\t\ttop = y - (head_height + row_top_border / 2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tnew_start = Math.max(0, new_start);\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t\tif (y > scroll_top + viewport_height) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstart = new_start;\n\t\tend = i;\n\t\tconst remaining = sortedItems.length - end;\n\t\tif (end === 0) {\n\t\t\tend = 10;\n\t\t}\n\t\taverage_height = (y - head_height) / end;\n\t\tlet remaining_height = remaining * average_height; // 0\n\t\t// compute height map for remaining items\n\t\twhile (i < sortedItems.length) {\n\t\t\ti += 1;\n\t\t\theight_map[i] = average_height;\n\t\t}\n\t\tbottom = remaining_height;\n\t\tif (!isFinite(bottom)) {\n\t\t\tbottom = 200000;\n\t\t}\n\t}\n\n\texport async function scroll_to_index(\n\t\tindex: number,\n\t\topts: ScrollToOptions,\n\t\talign_end = false\n\t): Promise<void> {\n\t\tawait tick();\n\n\t\tconst _itemHeight = average_height;\n\n\t\tlet distance = index * _itemHeight;\n\t\tif (align_end) {\n\t\t\tdistance = distance - viewport_height + _itemHeight + head_height;\n\t\t}\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tdistance += scrollbar_height;\n\t\t}\n\n\t\tconst _opts = {\n\t\t\ttop: distance,\n\t\t\tbehavior: \"smooth\" as ScrollBehavior,\n\t\t\t...opts\n\t\t};\n\n\t\tviewport.scrollTo(_opts);\n\t}\n\n\t$: sortedItems = items;\n\n\t$: visible = is_browser\n\t\t? sortedItems.slice(start, end).map((data, i) => {\n\t\t\t\treturn { index: i + start, data };\n\t\t\t})\n\t\t: sortedItems\n\t\t\t\t.slice(0, (max_height / sortedItems.length) * average_height + 1)\n\t\t\t\t.map((data, i) => {\n\t\t\t\t\treturn { index: i + start, data };\n\t\t\t\t});\n\n\tonMount(() => {\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tmounted = true;\n\t\trefresh_height_map(items);\n\t});\n</script>\n\n<svelte-virtual-table-viewport>\n\t<table\n\t\tclass=\"table\"\n\t\tbind:this={viewport}\n\t\tbind:contentRect={viewport_box}\n\t\ton:scroll={handle_scroll}\n\t\tstyle=\"height: {height}; --bw-svt-p-top: {top}px; --bw-svt-p-bottom: {bottom}px; --bw-svt-head-height: {head_height}px; --bw-svt-foot-height: {foot_height}px; --bw-svt-avg-row-height: {average_height}px\"\n\t>\n\t\t<thead class=\"thead\" bind:offsetHeight={head_height}>\n\t\t\t<slot name=\"thead\" />\n\t\t</thead>\n\t\t<tbody bind:this={contents} class=\"tbody\">\n\t\t\t{#if visible.length && visible[0].data.length}\n\t\t\t\t{#each visible as item (item.data[0].id)}\n\t\t\t\t\t<slot name=\"tbody\" item={item.data} index={item.index}>\n\t\t\t\t\t\tMissing Table Row\n\t\t\t\t\t</slot>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</tbody>\n\t\t<tfoot class=\"tfoot\" bind:offsetHeight={foot_height}>\n\t\t\t<slot name=\"tfoot\" />\n\t\t</tfoot>\n\t</table>\n</svelte-virtual-table-viewport>\n\n<style type=\"text/css\">\n\ttable {\n\t\tposition: relative;\n\t\toverflow-y: scroll;\n\t\toverflow-x: scroll;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tmax-height: 100vh;\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\tborder-collapse: separate;\n\t}\n\ttable :is(thead, tfoot, tbody) {\n\t\tdisplay: table;\n\t\ttable-layout: fixed;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\n\ttbody {\n\t\toverflow-x: scroll;\n\t\toverflow-y: hidden;\n\t}\n\n\ttable tbody {\n\t\tpadding-top: var(--bw-svt-p-top);\n\t\tpadding-bottom: var(--bw-svt-p-bottom);\n\t}\n\ttbody {\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tborder: 0px solid currentColor;\n\t}\n\n\ttbody > :global(tr:last-child) {\n\t\tborder: none;\n\t}\n\n\ttable :global(td) {\n\t\tscroll-snap-align: start;\n\t}\n\n\ttbody > :global(tr:nth-child(even)) {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\toverflow: hidden;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let icon: string;\n</script>\n\n{#if icon == \"add-column-right\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"4\"\n\t\t\ty=\"6\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"12\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12H19M16 8L19 12L16 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-column-left\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"16\"\n\t\t\ty=\"6\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"12\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12H5M8 8L5 12L8 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-row-above\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"6\"\n\t\t\ty=\"16\"\n\t\t\twidth=\"12\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12V5M8 8L12 5L16 8\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-row-below\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"6\"\n\t\t\ty=\"4\"\n\t\t\twidth=\"12\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12V19M8 16L12 19L16 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"delete-row\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"5\"\n\t\t\ty=\"10\"\n\t\t\twidth=\"14\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M8 7L16 17M16 7L8 17\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"delete-column\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"10\"\n\t\t\ty=\"5\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"14\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M7 8L17 16M17 8L7 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{/if}\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport CellMenuIcons from \"./CellMenuIcons.svelte\";\n\timport type { I18nFormatter } from \"js/utils/src\";\n\n\texport let x: number;\n\texport let y: number;\n\texport let on_add_row_above: () => void;\n\texport let on_add_row_below: () => void;\n\texport let on_add_column_left: () => void;\n\texport let on_add_column_right: () => void;\n\texport let row: number;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let on_delete_row: () => void;\n\texport let on_delete_col: () => void;\n\texport let can_delete_rows: boolean;\n\texport let can_delete_cols: boolean;\n\n\texport let i18n: I18nFormatter;\n\tlet menu_element: HTMLDivElement;\n\n\t$: is_header = row === -1;\n\t$: can_add_rows = row_count[1] === \"dynamic\";\n\t$: can_add_columns = col_count[1] === \"dynamic\";\n\n\tonMount(() => {\n\t\tposition_menu();\n\t});\n\n\tfunction position_menu(): void {\n\t\tif (!menu_element) return;\n\n\t\tconst viewport_width = window.innerWidth;\n\t\tconst viewport_height = window.innerHeight;\n\t\tconst menu_rect = menu_element.getBoundingClientRect();\n\n\t\tlet new_x = x - 30;\n\t\tlet new_y = y - 20;\n\n\t\tif (new_x + menu_rect.width > viewport_width) {\n\t\t\tnew_x = x - menu_rect.width + 10;\n\t\t}\n\n\t\tif (new_y + menu_rect.height > viewport_height) {\n\t\t\tnew_y = y - menu_rect.height + 10;\n\t\t}\n\n\t\tmenu_element.style.left = `${new_x}px`;\n\t\tmenu_element.style.top = `${new_y}px`;\n\t}\n</script>\n\n<div bind:this={menu_element} class=\"cell-menu\">\n\t{#if !is_header && can_add_rows}\n\t\t<button on:click={() => on_add_row_above()}>\n\t\t\t<CellMenuIcons icon=\"add-row-above\" />\n\t\t\t{i18n(\"dataframe.add_row_above\")}\n\t\t</button>\n\t\t<button on:click={() => on_add_row_below()}>\n\t\t\t<CellMenuIcons icon=\"add-row-below\" />\n\t\t\t{i18n(\"dataframe.add_row_below\")}\n\t\t</button>\n\t\t{#if can_delete_rows}\n\t\t\t<button on:click={on_delete_row} class=\"delete\">\n\t\t\t\t<CellMenuIcons icon=\"delete-row\" />\n\t\t\t\t{i18n(\"dataframe.delete_row\")}\n\t\t\t</button>\n\t\t{/if}\n\t{/if}\n\t{#if can_add_columns}\n\t\t<button on:click={() => on_add_column_left()}>\n\t\t\t<CellMenuIcons icon=\"add-column-left\" />\n\t\t\t{i18n(\"dataframe.add_column_left\")}\n\t\t</button>\n\t\t<button on:click={() => on_add_column_right()}>\n\t\t\t<CellMenuIcons icon=\"add-column-right\" />\n\t\t\t{i18n(\"dataframe.add_column_right\")}\n\t\t</button>\n\t\t{#if can_delete_cols}\n\t\t\t<button on:click={on_delete_col} class=\"delete\">\n\t\t\t\t<CellMenuIcons icon=\"delete-column\" />\n\t\t\t\t{i18n(\"dataframe.delete_column\")}\n\t\t\t</button>\n\t\t{/if}\n\t{/if}\n</div>\n\n<style>\n\t.cell-menu {\n\t\tposition: fixed;\n\t\tz-index: var(--layer-2);\n\t\tbackground: var(--background-fill-primary);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tpadding: var(--size-1);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-1);\n\t\tbox-shadow: var(--shadow-drop-lg);\n\t\tmin-width: 150px;\n\t}\n\n\t.cell-menu button {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\ttext-align: left;\n\t\tpadding: var(--size-1) var(--size-2);\n\t\tborder-radius: var(--radius-sm);\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--text-sm);\n\t\ttransition:\n\t\t\tbackground-color 0.2s,\n\t\t\tcolor 0.2s;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t}\n\n\t.cell-menu button:hover {\n\t\tbackground-color: var(--background-fill-secondary);\n\t}\n\n\t.cell-menu button :global(svg) {\n\t\tfill: currentColor;\n\t\ttransition: fill 0.2s;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { Maximize, Minimize, Copy, Check } from \"@gradio/icons\";\n\timport { onDestroy } from \"svelte\";\n\n\texport let show_fullscreen_button = false;\n\texport let show_copy_button = false;\n\texport let is_fullscreen = false;\n\texport let on_copy: () => Promise<void>;\n\n\tlet copied = false;\n\tlet timer: ReturnType<typeof setTimeout>;\n\n\tfunction copy_feedback(): void {\n\t\tcopied = true;\n\t\tif (timer) clearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tcopied = false;\n\t\t}, 2000);\n\t}\n\n\tasync function handle_copy(): Promise<void> {\n\t\tawait on_copy();\n\t\tcopy_feedback();\n\t}\n\n\tonDestroy(() => {\n\t\tif (timer) clearTimeout(timer);\n\t});\n</script>\n\n<div class=\"toolbar\" role=\"toolbar\" aria-label=\"Table actions\">\n\t{#if show_copy_button}\n\t\t<button\n\t\t\tclass=\"toolbar-button\"\n\t\t\ton:click={handle_copy}\n\t\t\taria-label={copied ? \"Copied to clipboard\" : \"Copy table data\"}\n\t\t\ttitle={copied ? \"Copied to clipboard\" : \"Copy table data\"}\n\t\t>\n\t\t\t{#if copied}\n\t\t\t\t<Check />\n\t\t\t{:else}\n\t\t\t\t<Copy />\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n\t{#if show_fullscreen_button}\n\t\t<button\n\t\t\tclass=\"toolbar-button\"\n\t\t\ton:click\n\t\t\taria-label={is_fullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n\t\t\ttitle={is_fullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n\t\t>\n\t\t\t{#if is_fullscreen}\n\t\t\t\t<Minimize />\n\t\t\t{:else}\n\t\t\t\t<Maximize />\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n</div>\n\n<style>\n\t.toolbar {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tgap: var(--size-1);\n\t}\n\n\t.toolbar-button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: var(--size-6);\n\t\theight: var(--size-6);\n\t\tpadding: var(--size-1);\n\t\tborder: none;\n\t\tborder-radius: var(--radius-sm);\n\t\tbackground: transparent;\n\t\tcolor: var(--body-text-color-subdued);\n\t\tcursor: pointer;\n\t\ttransition: all 0.2s;\n\t}\n\n\t.toolbar-button:hover {\n\t\tbackground: var(--background-fill-secondary);\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.toolbar-button :global(svg) {\n\t\twidth: var(--size-4);\n\t\theight: var(--size-4);\n\t}\n</style>\n","export type CellCoordinate = [number, number];\nexport type CellData = { id: string; value: string | number };\nexport type EditingState = false | CellCoordinate;\n\nexport function is_cell_selected(\n\tcell: CellCoordinate,\n\tselected_cells: CellCoordinate[]\n): string {\n\tconst [row, col] = cell;\n\tif (!selected_cells.some(([r, c]) => r === row && c === col)) return \"\";\n\n\tconst up = selected_cells.some(([r, c]) => r === row - 1 && c === col);\n\tconst down = selected_cells.some(([r, c]) => r === row + 1 && c === col);\n\tconst left = selected_cells.some(([r, c]) => r === row && c === col - 1);\n\tconst right = selected_cells.some(([r, c]) => r === row && c === col + 1);\n\n\treturn `cell-selected${up ? \" no-top\" : \"\"}${down ? \" no-bottom\" : \"\"}${left ? \" no-left\" : \"\"}${right ? \" no-right\" : \"\"}`;\n}\n\nexport function get_range_selection(\n\tstart: CellCoordinate,\n\tend: CellCoordinate\n): CellCoordinate[] {\n\tconst [start_row, start_col] = start;\n\tconst [end_row, end_col] = end;\n\tconst min_row = Math.min(start_row, end_row);\n\tconst max_row = Math.max(start_row, end_row);\n\tconst min_col = Math.min(start_col, end_col);\n\tconst max_col = Math.max(start_col, end_col);\n\n\tconst cells: CellCoordinate[] = [];\n\tfor (let i = min_row; i <= max_row; i++) {\n\t\tfor (let j = min_col; j <= max_col; j++) {\n\t\t\tcells.push([i, j]);\n\t\t}\n\t}\n\treturn cells;\n}\n\nexport function handle_selection(\n\tcurrent: CellCoordinate,\n\tselected_cells: CellCoordinate[],\n\tevent: { shiftKey: boolean; metaKey: boolean; ctrlKey: boolean }\n): CellCoordinate[] {\n\tif (event.shiftKey && selected_cells.length > 0) {\n\t\treturn get_range_selection(\n\t\t\tselected_cells[selected_cells.length - 1],\n\t\t\tcurrent\n\t\t);\n\t}\n\n\tif (event.metaKey || event.ctrlKey) {\n\t\tconst index = selected_cells.findIndex(\n\t\t\t([r, c]) => r === current[0] && c === current[1]\n\t\t);\n\t\tif (index === -1) {\n\t\t\treturn [...selected_cells, current];\n\t\t}\n\t\treturn selected_cells.filter((_, i) => i !== index);\n\t}\n\n\treturn [current];\n}\n\nexport function handle_delete_key(\n\tdata: CellData[][],\n\tselected_cells: CellCoordinate[]\n): CellData[][] {\n\tconst new_data = data.map((row) => [...row]);\n\tselected_cells.forEach(([row, col]) => {\n\t\tif (new_data[row] && new_data[row][col]) {\n\t\t\tnew_data[row][col] = { ...new_data[row][col], value: \"\" };\n\t\t}\n\t});\n\treturn new_data;\n}\n\nexport function handle_editing_state(\n\tcurrent: CellCoordinate,\n\tediting: EditingState,\n\tselected_cells: CellCoordinate[],\n\teditable: boolean\n): EditingState {\n\tconst [row, col] = current;\n\tif (!editable) return false;\n\n\tif (editing && editing[0] === row && editing[1] === col) return editing;\n\n\tif (\n\t\tselected_cells.length === 1 &&\n\t\tselected_cells[0][0] === row &&\n\t\tselected_cells[0][1] === col\n\t) {\n\t\treturn [row, col];\n\t}\n\n\treturn false;\n}\n\nexport function should_show_cell_menu(\n\tcell: CellCoordinate,\n\tselected_cells: CellCoordinate[],\n\teditable: boolean\n): boolean {\n\tconst [row, col] = cell;\n\treturn (\n\t\teditable &&\n\t\tselected_cells.length === 1 &&\n\t\tselected_cells[0][0] === row &&\n\t\tselected_cells[0][1] === col\n\t);\n}\n\nexport function get_next_cell_coordinates(\n\tcurrent: CellCoordinate,\n\tdata: CellData[][],\n\tshift_key: boolean\n): CellCoordinate | false {\n\tconst [row, col] = current;\n\tconst direction = shift_key ? -1 : 1;\n\n\tif (data[row]?.[col + direction]) {\n\t\treturn [row, col + direction];\n\t}\n\n\tconst next_row = row + (direction > 0 ? 1 : 0);\n\tconst prev_row = row + (direction < 0 ? -1 : 0);\n\n\tif (direction > 0 && data[next_row]?.[0]) {\n\t\treturn [next_row, 0];\n\t}\n\n\tif (direction < 0 && data[prev_row]?.[data[0].length - 1]) {\n\t\treturn [prev_row, data[0].length - 1];\n\t}\n\n\treturn false;\n}\n\nexport function move_cursor(\n\tkey: \"ArrowRight\" | \"ArrowLeft\" | \"ArrowDown\" | \"ArrowUp\",\n\tcurrent_coords: CellCoordinate,\n\tdata: CellData[][]\n): CellCoordinate | false {\n\tconst dir = {\n\t\tArrowRight: [0, 1],\n\t\tArrowLeft: [0, -1],\n\t\tArrowDown: [1, 0],\n\t\tArrowUp: [-1, 0]\n\t}[key];\n\n\tconst i = current_coords[0] + dir[0];\n\tconst j = current_coords[1] + dir[1];\n\n\tif (i < 0 && j <= 0) {\n\t\treturn false;\n\t}\n\n\tconst is_data = data[i]?.[j];\n\tif (is_data) {\n\t\treturn [i, j];\n\t}\n\treturn false;\n}\n\nexport function get_current_indices(\n\tid: string,\n\tdata: CellData[][]\n): [number, number] {\n\treturn data.reduce(\n\t\t(acc, arr, i) => {\n\t\t\tconst j = arr.reduce(\n\t\t\t\t(_acc, _data, k) => (id === _data.id ? k : _acc),\n\t\t\t\t-1\n\t\t\t);\n\t\t\treturn j === -1 ? acc : [i, j];\n\t\t},\n\t\t[-1, -1]\n\t);\n}\n\nexport function handle_click_outside(\n\tevent: Event,\n\tparent: HTMLElement\n): boolean {\n\tconst [trigger] = event.composedPath() as HTMLElement[];\n\treturn !parent.contains(trigger);\n}\n","import type { HeadersWithIDs } from \"./utils\";\nimport type { CellCoordinate } from \"./selection_utils\";\nimport { dsvFormat } from \"d3-dsv\";\n\nexport type TableData = {\n\tvalue: string | number;\n\tid: string;\n}[][];\n\nexport function get_max(_d: TableData): TableData[0] {\n\tif (!_d || _d.length === 0 || !_d[0]) return [];\n\tlet max = _d[0].slice();\n\tfor (let i = 0; i < _d.length; i++) {\n\t\tfor (let j = 0; j < _d[i].length; j++) {\n\t\t\tif (`${max[j].value}`.length < `${_d[i][j].value}`.length) {\n\t\t\t\tmax[j] = _d[i][j];\n\t\t\t}\n\t\t}\n\t}\n\treturn max;\n}\n\nexport function guess_delimiter(\n\ttext: string,\n\tpossibleDelimiters: string[]\n): string[] {\n\treturn possibleDelimiters.filter(weedOut);\n\n\tfunction weedOut(delimiter: string): boolean {\n\t\tvar cache = -1;\n\t\treturn text.split(\"\\n\").every(checkLength);\n\n\t\tfunction checkLength(line: string): boolean {\n\t\t\tif (!line) return true;\n\t\t\tvar length = line.split(delimiter).length;\n\t\t\tif (cache < 0) cache = length;\n\t\t\treturn cache === length && length > 1;\n\t\t}\n\t}\n}\n\nexport function data_uri_to_blob(data_uri: string): Blob {\n\tconst byte_str = atob(data_uri.split(\",\")[1]);\n\tconst mime_str = data_uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\tconst ab = new ArrayBuffer(byte_str.length);\n\tconst ia = new Uint8Array(ab);\n\tfor (let i = 0; i < byte_str.length; i++) {\n\t\tia[i] = byte_str.charCodeAt(i);\n\t}\n\treturn new Blob([ab], { type: mime_str });\n}\n\nexport async function copy_table_data(\n\tdata: TableData,\n\theaders?: HeadersWithIDs,\n\tselected_cells?: CellCoordinate[]\n): Promise<void> {\n\tif (!selected_cells || selected_cells.length === 0) {\n\t\tconst header_row = headers\n\t\t\t? headers.map((h) => String(h.value)).join(\",\")\n\t\t\t: \"\";\n\t\tconst table_data = data\n\t\t\t.map((row) => row.map((cell) => String(cell.value)).join(\",\"))\n\t\t\t.join(\"\\n\");\n\n\t\tconst all_data = header_row ? `${header_row}\\n${table_data}` : table_data;\n\t\tawait write_to_clipboard(all_data);\n\t\treturn;\n\t}\n\n\tconst min_row = Math.min(...selected_cells.map(([r]) => r));\n\tconst max_row = Math.max(...selected_cells.map(([r]) => r));\n\tconst min_col = Math.min(...selected_cells.map(([_, c]) => c));\n\tconst max_col = Math.max(...selected_cells.map(([_, c]) => c));\n\n\tconst selected_data = [];\n\tfor (let i = min_row; i <= max_row; i++) {\n\t\tconst row = [];\n\t\tfor (let j = min_col; j <= max_col; j++) {\n\t\t\tconst is_selected = selected_cells.some(([r, c]) => r === i && c === j);\n\t\t\trow.push(is_selected ? String(data[i][j].value) : \"\");\n\t\t}\n\t\tselected_data.push(row.join(\",\"));\n\t}\n\n\tawait write_to_clipboard(selected_data.join(\"\\n\"));\n}\n\nasync function write_to_clipboard(csv_data: string): Promise<void> {\n\ttry {\n\t\tif (\"clipboard\" in navigator) {\n\t\t\tawait navigator.clipboard.writeText(csv_data);\n\t\t} else {\n\t\t\tconst textArea = document.createElement(\"textarea\");\n\t\t\ttextArea.value = csv_data;\n\t\t\ttextArea.style.position = \"absolute\";\n\t\t\ttextArea.style.left = \"-999999px\";\n\t\t\tdocument.body.prepend(textArea);\n\t\t\ttextArea.select();\n\n\t\t\tdocument.execCommand(\"copy\");\n\t\t\ttextArea.remove();\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Failed to copy table data:\", error);\n\t}\n}\n\nexport function blob_to_string(\n\tblob: Blob,\n\tcol_count: [number, \"fixed\" | \"dynamic\"],\n\tmake_headers: (head: string[]) => HeadersWithIDs,\n\tset_values: (values: (string | number)[][]) => void\n): void {\n\tconst reader = new FileReader();\n\n\tfunction handle_read(e: ProgressEvent<FileReader>): void {\n\t\tif (!e?.target?.result || typeof e.target.result !== \"string\") return;\n\n\t\tconst [delimiter] = guess_delimiter(e.target.result, [\",\", \"\\t\"]);\n\t\tconst [head, ...rest] = dsvFormat(delimiter).parseRows(e.target.result);\n\n\t\tmake_headers(col_count[1] === \"fixed\" ? head.slice(0, col_count[0]) : head);\n\t\tset_values(rest);\n\t\treader.removeEventListener(\"loadend\", handle_read);\n\t}\n\n\treader.addEventListener(\"loadend\", handle_read);\n\treader.readAsText(blob);\n}\n\nexport function handle_file_upload(\n\tdata_uri: string,\n\tcol_count: [number, \"fixed\" | \"dynamic\"],\n\tmake_headers: (head: string[]) => HeadersWithIDs,\n\tset_values: (values: (string | number)[][]) => void\n): void {\n\tconst blob = data_uri_to_blob(data_uri);\n\tconst reader = new FileReader();\n\treader.addEventListener(\"loadend\", (e) => {\n\t\tif (!e?.target?.result || typeof e.target.result !== \"string\") return;\n\t\tconst [delimiter] = guess_delimiter(e.target.result, [\",\", \"\\t\"]);\n\t\tconst [head, ...rest] = dsvFormat(delimiter).parseRows(e.target.result);\n\t\tmake_headers(col_count[1] === \"fixed\" ? head.slice(0, col_count[0]) : head);\n\t\tset_values(rest);\n\t});\n\treader.readAsText(blob);\n}\n","<script lang=\"ts\">\n\timport { afterUpdate, createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { dequal } from \"dequal/lite\";\n\timport { Upload } from \"@gradio/upload\";\n\n\timport EditableCell from \"./EditableCell.svelte\";\n\timport type { SelectData } from \"@gradio/utils\";\n\timport type { I18nFormatter } from \"js/core/src/gradio_helper\";\n\timport { type Client } from \"@gradio/client\";\n\timport VirtualTable from \"./VirtualTable.svelte\";\n\timport type {\n\t\tHeaders,\n\t\tHeadersWithIDs,\n\t\tDataframeValue,\n\t\tDatatype\n\t} from \"./utils\";\n\timport CellMenu from \"./CellMenu.svelte\";\n\timport Toolbar from \"./Toolbar.svelte\";\n\timport type { CellCoordinate, EditingState } from \"./types\";\n\timport {\n\t\tis_cell_selected,\n\t\thandle_selection,\n\t\thandle_delete_key,\n\t\tshould_show_cell_menu,\n\t\tget_next_cell_coordinates,\n\t\tget_range_selection,\n\t\tmove_cursor,\n\t\tget_current_indices,\n\t\thandle_click_outside as handle_click_outside_util\n\t} from \"./selection_utils\";\n\timport { copy_table_data, get_max, handle_file_upload } from \"./table_utils\";\n\n\texport let datatype: Datatype | Datatype[];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let headers: Headers = [];\n\texport let values: (string | number)[][] = [];\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\n\texport let editable = true;\n\texport let wrap = false;\n\texport let root: string;\n\texport let i18n: I18nFormatter;\n\n\texport let max_height = 500;\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let show_row_numbers = false;\n\texport let upload: Client[\"upload\"];\n\texport let stream_handler: Client[\"stream\"];\n\texport let show_fullscreen_button = false;\n\texport let show_copy_button = false;\n\texport let value_is_output = false;\n\texport let max_chars: number | undefined = undefined;\n\n\tlet selected_cells: CellCoordinate[] = [];\n\t$: selected_cells = [...selected_cells];\n\tlet selected: CellCoordinate | false = false;\n\t$: selected =\n\t\tselected_cells.length > 0\n\t\t\t? selected_cells[selected_cells.length - 1]\n\t\t\t: false;\n\n\texport let display_value: string[][] | null = null;\n\texport let styling: string[][] | null = null;\n\tlet t_rect: DOMRectReadOnly;\n\tlet els: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t> = {};\n\tlet data_binding: Record<string, (typeof data)[0][0]> = {};\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: DataframeValue;\n\t\tinput: undefined;\n\t\tselect: SelectData;\n\t}>();\n\n\tlet editing: EditingState = false;\n\tlet clear_on_focus = false;\n\tlet header_edit: number | false = false;\n\tlet selected_header: number | false = false;\n\tlet active_cell_menu: {\n\t\trow: number;\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null = null;\n\tlet active_header_menu: {\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null = null;\n\tlet is_fullscreen = false;\n\tlet dragging = false;\n\n\tconst get_data_at = (row: number, col: number): string | number =>\n\t\tdata?.[row]?.[col]?.value;\n\n\tfunction make_id(): string {\n\t\treturn Math.random().toString(36).substring(2, 15);\n\t}\n\n\tfunction make_headers(_head: Headers): HeadersWithIDs {\n\t\tlet _h = _head || [];\n\t\tif (col_count[1] === \"fixed\" && _h.length < col_count[0]) {\n\t\t\tconst fill = Array(col_count[0] - _h.length)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map((_, i) => `${i + _h.length}`);\n\t\t\t_h = _h.concat(fill);\n\t\t}\n\n\t\tif (!_h || _h.length === 0) {\n\t\t\treturn Array(col_count[0])\n\t\t\t\t.fill(0)\n\t\t\t\t.map((_, i) => {\n\t\t\t\t\tconst _id = make_id();\n\t\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\t\treturn { id: _id, value: JSON.stringify(i + 1) };\n\t\t\t\t});\n\t\t}\n\n\t\treturn _h.map((h, i) => {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\treturn { id: _id, value: h ?? \"\" };\n\t\t});\n\t}\n\n\tfunction process_data(_values: (string | number)[][]): {\n\t\tvalue: string | number;\n\t\tid: string;\n\t}[][] {\n\t\tconst data_row_length = _values.length;\n\t\treturn Array(row_count[1] === \"fixed\" ? row_count[0] : data_row_length)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) =>\n\t\t\t\tArray(\n\t\t\t\t\tcol_count[1] === \"fixed\"\n\t\t\t\t\t\t? col_count[0]\n\t\t\t\t\t\t: data_row_length > 0\n\t\t\t\t\t\t\t? _values[0].length\n\t\t\t\t\t\t\t: headers.length\n\t\t\t\t)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, j) => {\n\t\t\t\t\t\tconst id = make_id();\n\t\t\t\t\t\tels[id] = els[id] || { input: null, cell: null };\n\t\t\t\t\t\tconst obj = { value: _values?.[i]?.[j] ?? \"\", id };\n\t\t\t\t\t\tdata_binding[id] = obj;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t})\n\t\t\t);\n\t}\n\n\tlet _headers = make_headers(headers);\n\tlet old_headers: string[] = headers;\n\n\t$: {\n\t\tif (!dequal(headers, old_headers)) {\n\t\t\t_headers = make_headers(headers);\n\t\t\told_headers = JSON.parse(JSON.stringify(headers));\n\t\t}\n\t}\n\n\tlet data: { id: string; value: string | number }[][] = [[]];\n\tlet old_val: undefined | (string | number)[][] = undefined;\n\n\t$: if (!dequal(values, old_val)) {\n\t\tdata = process_data(values as (string | number)[][]);\n\t\told_val = JSON.parse(JSON.stringify(values)) as (string | number)[][];\n\t}\n\n\tlet previous_headers = _headers.map((h) => h.value);\n\tlet previous_data = data.map((row) => row.map((cell) => String(cell.value)));\n\n\tasync function trigger_change(): Promise<void> {\n\t\tconst current_headers = _headers.map((h) => h.value);\n\t\tconst current_data = data.map((row) =>\n\t\t\trow.map((cell) => String(cell.value))\n\t\t);\n\n\t\tif (\n\t\t\t!dequal(current_data, previous_data) ||\n\t\t\t!dequal(current_headers, previous_headers)\n\t\t) {\n\t\t\t// We dispatch the value as part of the change event to ensure that the value is updated\n\t\t\t// in the parent component and the updated value is passed into the user's function\n\t\t\tdispatch(\"change\", {\n\t\t\t\tdata: data.map((row) => row.map((cell) => cell.value)),\n\t\t\t\theaders: _headers.map((h) => h.value),\n\t\t\t\tmetadata: null\n\t\t\t});\n\t\t\tif (!value_is_output) {\n\t\t\t\tdispatch(\"input\");\n\t\t\t}\n\t\t\tprevious_data = current_data;\n\t\t\tprevious_headers = current_headers;\n\t\t}\n\t}\n\n\tfunction get_sort_status(\n\t\tname: string,\n\t\t_sort?: number,\n\t\tdirection?: SortDirection\n\t): \"none\" | \"ascending\" | \"descending\" {\n\t\tif (!_sort) return \"none\";\n\t\tif (headers[_sort] === name) {\n\t\t\tif (direction === \"asc\") return \"ascending\";\n\t\t\tif (direction === \"des\") return \"descending\";\n\t\t}\n\t\treturn \"none\";\n\t}\n\n\t// eslint-disable-next-line complexity\n\tasync function handle_keydown(event: KeyboardEvent): Promise<void> {\n\t\tif (selected_header !== false && header_edit === false) {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\tselected = [0, selected_header];\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header > 0 ? selected_header - 1 : selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header < _headers.length - 1\n\t\t\t\t\t\t\t? selected_header + 1\n\t\t\t\t\t\t\t: selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"Escape\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Enter\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (event.key === \"Delete\" || event.key === \"Backspace\") {\n\t\t\tif (!editable) return;\n\n\t\t\tif (editing) {\n\t\t\t\tconst [row, col] = editing;\n\t\t\t\tconst input_el = els[data[row][col].id].input;\n\t\t\t\tif (input_el && input_el.selectionStart !== input_el.selectionEnd) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tevent.key === \"Delete\" &&\n\t\t\t\t\tinput_el?.selectionStart !== input_el?.value.length\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (event.key === \"Backspace\" && input_el?.selectionStart !== 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tif (selected_cells.length > 0) {\n\t\t\t\tdata = handle_delete_key(data, selected_cells);\n\t\t\t\tdispatch(\"change\", {\n\t\t\t\t\tdata: data.map((row) => row.map((cell) => cell.value)),\n\t\t\t\t\theaders: _headers.map((h) => h.value),\n\t\t\t\t\tmetadata: null\n\t\t\t\t});\n\t\t\t\tif (!value_is_output) {\n\t\t\t\t\tdispatch(\"input\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.key === \"c\" && (event.metaKey || event.ctrlKey)) {\n\t\t\tevent.preventDefault();\n\t\t\tif (selected_cells.length > 0) {\n\t\t\t\tawait handle_copy();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!selected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [i, j] = selected;\n\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowRight\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\tcase \"ArrowDown\":\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tif (editing) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst next_coords = move_cursor(event.key, [i, j], data);\n\t\t\t\tif (next_coords) {\n\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\tselected_cells = get_range_selection(\n\t\t\t\t\t\t\tselected_cells.length > 0 ? selected_cells[0] : [i, j],\n\t\t\t\t\t\t\tnext_coords\n\t\t\t\t\t\t);\n\t\t\t\t\t\tediting = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tselected_cells = [next_coords];\n\t\t\t\t\t\tediting = next_coords;\n\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t}\n\t\t\t\t\tselected = next_coords;\n\t\t\t\t} else if (\n\t\t\t\t\tnext_coords === false &&\n\t\t\t\t\tevent.key === \"ArrowUp\" &&\n\t\t\t\t\ti === 0\n\t\t\t\t) {\n\t\t\t\t\tselected_header = j;\n\t\t\t\t\tselected = false;\n\t\t\t\t\tediting = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"Escape\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tediting = false;\n\t\t\t\tbreak;\n\t\t\tcase \"Enter\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tadd_row(i);\n\t\t\t\t\tawait tick();\n\n\t\t\t\t\tselected = [i + 1, j];\n\t\t\t\t} else {\n\t\t\t\t\tif (dequal(editing, [i, j])) {\n\t\t\t\t\t\tconst cell_id = data[i][j].id;\n\t\t\t\t\t\tconst input_el = els[cell_id].input;\n\t\t\t\t\t\tif (input_el) {\n\t\t\t\t\t\t\tdata[i][j].value = input_el.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tediting = false;\n\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\tselected = [i, j];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tediting = [i, j];\n\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Tab\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tediting = false;\n\t\t\t\tconst next_cell = get_next_cell_coordinates(\n\t\t\t\t\t[i, j],\n\t\t\t\t\tdata,\n\t\t\t\t\tevent.shiftKey\n\t\t\t\t);\n\t\t\t\tif (next_cell) {\n\t\t\t\t\tselected_cells = [next_cell];\n\t\t\t\t\tselected = next_cell;\n\t\t\t\t\tif (editable) {\n\t\t\t\t\t\tediting = next_cell;\n\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (\n\t\t\t\t\t(!editing || (editing && dequal(editing, [i, j]))) &&\n\t\t\t\t\tevent.key.length === 1\n\t\t\t\t) {\n\t\t\t\t\tclear_on_focus = true;\n\t\t\t\t\tediting = [i, j];\n\t\t\t\t}\n\t\t}\n\t}\n\n\ttype SortDirection = \"asc\" | \"des\";\n\tlet sort_direction: SortDirection | undefined;\n\tlet sort_by: number | undefined;\n\n\tfunction handle_sort(col: number): void {\n\t\tif (typeof sort_by !== \"number\" || sort_by !== col) {\n\t\t\tsort_direction = \"asc\";\n\t\t\tsort_by = col;\n\t\t} else {\n\t\t\tif (sort_direction === \"asc\") {\n\t\t\t\tsort_direction = \"des\";\n\t\t\t} else if (sort_direction === \"des\") {\n\t\t\t\tsort_direction = \"asc\";\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function edit_header(i: number, _select = false): Promise<void> {\n\t\tif (!editable || col_count[1] !== \"dynamic\" || header_edit === i) return;\n\t\tselected = false;\n\t\tselected_cells = [];\n\t\tselected_header = i;\n\t\theader_edit = i;\n\t}\n\n\tfunction end_header_edit(event: CustomEvent<KeyboardEvent>): void {\n\t\tif (!editable) return;\n\n\t\tswitch (event.detail.key) {\n\t\t\tcase \"Escape\":\n\t\t\tcase \"Enter\":\n\t\t\tcase \"Tab\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tselected = false;\n\t\t\t\tselected_header = header_edit;\n\t\t\t\theader_edit = false;\n\t\t\t\tparent.focus();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync function add_row(index?: number): Promise<void> {\n\t\tparent.focus();\n\n\t\tif (row_count[1] !== \"dynamic\") return;\n\t\tif (data.length === 0) {\n\t\t\tvalues = [Array(headers.length).fill(\"\")];\n\t\t\treturn;\n\t\t}\n\n\t\tconst new_row = Array(data[0].length)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) => {\n\t\t\t\tconst _id = make_id();\n\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\treturn { id: _id, value: \"\" };\n\t\t\t});\n\n\t\tif (index !== undefined && index >= 0 && index <= data.length) {\n\t\t\tdata.splice(index, 0, new_row);\n\t\t} else {\n\t\t\tdata.push(new_row);\n\t\t}\n\n\t\tdata = data;\n\t\tselected = [index !== undefined ? index : data.length - 1, 0];\n\t}\n\n\t$: (data || _headers) && trigger_change();\n\n\tasync function add_col(index?: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (col_count[1] !== \"dynamic\") return;\n\n\t\tconst insert_index = index !== undefined ? index : data[0].length;\n\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\tdata[i].splice(insert_index, 0, { id: _id, value: \"\" });\n\t\t}\n\n\t\theaders.splice(insert_index, 0, `Header ${headers.length + 1}`);\n\n\t\tdata = data;\n\t\theaders = headers;\n\n\t\tawait tick();\n\n\t\trequestAnimationFrame(() => {\n\t\t\tedit_header(insert_index, true);\n\t\t\tconst new_w = parent.querySelectorAll(\"tbody\")[1].offsetWidth;\n\t\t\tparent.querySelectorAll(\"table\")[1].scrollTo({ left: new_w });\n\t\t});\n\t}\n\n\tfunction handle_click_outside(event: Event): void {\n\t\tif (handle_click_outside_util(event, parent)) {\n\t\t\tediting = false;\n\t\t\tselected_cells = [];\n\t\t\theader_edit = false;\n\t\t\tselected_header = false;\n\t\t\tactive_cell_menu = null;\n\t\t\tactive_header_menu = null;\n\t\t}\n\t}\n\n\t$: max = get_max(data);\n\n\t$: cells[0] && set_cell_widths();\n\tlet cells: HTMLTableCellElement[] = [];\n\tlet parent: HTMLDivElement;\n\tlet table: HTMLTableElement;\n\n\tfunction set_cell_widths(): void {\n\t\tconst widths = cells.map((el, i) => {\n\t\t\treturn el?.clientWidth || 0;\n\t\t});\n\t\tif (widths.length === 0) return;\n\t\tfor (let i = 0; i < widths.length; i++) {\n\t\t\tparent.style.setProperty(\n\t\t\t\t`--cell-width-${i}`,\n\t\t\t\t`${widths[i] - scrollbar_width / widths.length}px`\n\t\t\t);\n\t\t}\n\t}\n\n\tlet table_height: number =\n\t\tvalues.slice(0, (max_height / values.length) * 37).length * 37 + 37;\n\tlet scrollbar_width = 0;\n\n\tfunction sort_data(\n\t\t_data: typeof data,\n\t\t_display_value: string[][] | null,\n\t\t_styling: string[][] | null,\n\t\tcol?: number,\n\t\tdir?: SortDirection\n\t): void {\n\t\tlet id = null;\n\t\t//Checks if the selected cell is still in the data\n\t\tif (selected && selected[0] in data && selected[1] in data[selected[0]]) {\n\t\t\tid = data[selected[0]][selected[1]].id;\n\t\t}\n\t\tif (typeof col !== \"number\" || !dir) {\n\t\t\treturn;\n\t\t}\n\t\tconst indices = [...Array(_data.length).keys()];\n\n\t\tif (dir === \"asc\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value < _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else if (dir === \"des\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value > _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// sort all the data and metadata based on the values in the data\n\t\tconst temp_data = [..._data];\n\t\tconst temp_display_value = _display_value ? [..._display_value] : null;\n\t\tconst temp_styling = _styling ? [..._styling] : null;\n\t\tindices.forEach((originalIndex, sortedIndex) => {\n\t\t\t_data[sortedIndex] = temp_data[originalIndex];\n\t\t\tif (_display_value && temp_display_value)\n\t\t\t\t_display_value[sortedIndex] = temp_display_value[originalIndex];\n\t\t\tif (_styling && temp_styling)\n\t\t\t\t_styling[sortedIndex] = temp_styling[originalIndex];\n\t\t});\n\n\t\tdata = data;\n\n\t\tif (id) {\n\t\t\tconst [i, j] = get_current_indices(id, data);\n\t\t\tselected = [i, j];\n\t\t}\n\t}\n\n\t$: sort_data(data, display_value, styling, sort_by, sort_direction);\n\n\t$: selected_index = !!selected && selected[0];\n\n\tlet is_visible = false;\n\n\tonMount(() => {\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting && !is_visible) {\n\t\t\t\t\tset_cell_widths();\n\t\t\t\t\tdata = data;\n\t\t\t\t}\n\t\t\t\tis_visible = entry.isIntersecting;\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(parent);\n\t\tdocument.addEventListener(\"click\", handle_click_outside);\n\t\twindow.addEventListener(\"resize\", handle_resize);\n\t\tdocument.addEventListener(\"fullscreenchange\", handle_fullscreen_change);\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t\tdocument.removeEventListener(\"click\", handle_click_outside);\n\t\t\twindow.removeEventListener(\"resize\", handle_resize);\n\t\t\tdocument.removeEventListener(\n\t\t\t\t\"fullscreenchange\",\n\t\t\t\thandle_fullscreen_change\n\t\t\t);\n\t\t};\n\t});\n\n\tfunction handle_cell_click(\n\t\tevent: MouseEvent,\n\t\trow: number,\n\t\tcol: number\n\t): void {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tclear_on_focus = false;\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t\tselected_header = false;\n\t\theader_edit = false;\n\n\t\tselected_cells = handle_selection([row, col], selected_cells, event);\n\n\t\tif (selected_cells.length === 1 && editable) {\n\t\t\tediting = [row, col];\n\t\t\ttick().then(() => {\n\t\t\t\tconst input_el = els[data[row][col].id].input;\n\t\t\t\tif (input_el) {\n\t\t\t\t\tinput_el.focus();\n\t\t\t\t\tinput_el.selectionStart = input_el.selectionEnd =\n\t\t\t\t\t\tinput_el.value.length;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tediting = false;\n\t\t}\n\n\t\ttoggle_cell_button(row, col);\n\n\t\tdispatch(\"select\", {\n\t\t\tindex: [row, col],\n\t\t\tvalue: get_data_at(row, col),\n\t\t\trow_value: data[row].map((d) => d.value)\n\t\t});\n\t}\n\n\tfunction toggle_cell_menu(event: MouseEvent, row: number, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tactive_cell_menu &&\n\t\t\tactive_cell_menu.row === row &&\n\t\t\tactive_cell_menu.col === col\n\t\t) {\n\t\t\tactive_cell_menu = null;\n\t\t} else {\n\t\t\tconst cell = (event.target as HTMLElement).closest(\"td\");\n\t\t\tif (cell) {\n\t\t\t\tconst rect = cell.getBoundingClientRect();\n\t\t\t\tactive_cell_menu = { row, col, x: rect.right, y: rect.bottom };\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction add_row_at(index: number, position: \"above\" | \"below\"): void {\n\t\tconst row_index = position === \"above\" ? index : index + 1;\n\t\tadd_row(row_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction add_col_at(index: number, position: \"left\" | \"right\"): void {\n\t\tconst col_index = position === \"left\" ? index : index + 1;\n\t\tadd_col(col_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction handle_resize(): void {\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t\tset_cell_widths();\n\t}\n\n\tlet active_button: {\n\t\ttype: \"header\" | \"cell\";\n\t\trow?: number;\n\t\tcol: number;\n\t} | null = null;\n\n\tfunction toggle_header_button(col: number): void {\n\t\tactive_button =\n\t\t\tactive_button?.type === \"header\" && active_button.col === col\n\t\t\t\t? null\n\t\t\t\t: { type: \"header\", col };\n\t}\n\n\tfunction toggle_cell_button(row: number, col: number): void {\n\t\tactive_button =\n\t\t\tactive_button?.type === \"cell\" &&\n\t\t\tactive_button.row === row &&\n\t\t\tactive_button.col === col\n\t\t\t\t? null\n\t\t\t\t: { type: \"cell\", row, col };\n\t}\n\n\tfunction toggle_fullscreen(): void {\n\t\tif (!document.fullscreenElement) {\n\t\t\tparent.requestFullscreen();\n\t\t\tis_fullscreen = true;\n\t\t} else {\n\t\t\tdocument.exitFullscreen();\n\t\t\tis_fullscreen = false;\n\t\t}\n\t}\n\n\tfunction handle_fullscreen_change(): void {\n\t\tis_fullscreen = !!document.fullscreenElement;\n\t}\n\n\tasync function handle_copy(): Promise<void> {\n\t\tawait copy_table_data(data, _headers, selected_cells);\n\t}\n\n\tfunction toggle_header_menu(event: MouseEvent, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (active_header_menu && active_header_menu.col === col) {\n\t\t\tactive_header_menu = null;\n\t\t} else {\n\t\t\tconst header = (event.target as HTMLElement).closest(\"th\");\n\t\t\tif (header) {\n\t\t\t\tconst rect = header.getBoundingClientRect();\n\t\t\t\tactive_header_menu = { col, x: rect.right, y: rect.bottom };\n\t\t\t}\n\t\t}\n\t}\n\n\tafterUpdate(() => {\n\t\tvalue_is_output = false;\n\t});\n\n\tasync function delete_row(index: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (row_count[1] !== \"dynamic\") return;\n\t\tif (data.length <= 1) return;\n\t\tdata.splice(index, 1);\n\t\tdata = data;\n\t\tselected = false;\n\t}\n\n\tasync function delete_col(index: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (col_count[1] !== \"dynamic\") return;\n\t\tif (data[0].length <= 1) return;\n\n\t\t_headers.splice(index, 1);\n\t\t_headers = _headers;\n\n\t\tdata.forEach((row) => {\n\t\t\trow.splice(index, 1);\n\t\t});\n\t\tdata = data;\n\t\tselected = false;\n\t}\n\n\tfunction delete_row_at(index: number): void {\n\t\tdelete_row(index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction delete_col_at(index: number): void {\n\t\tdelete_col(index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n</script>\n\n<svelte:window on:resize={() => set_cell_widths()} />\n\n<div class=\"table-container\">\n\t<div class=\"header-row\">\n\t\t{#if label && label.length !== 0 && show_label}\n\t\t\t<div class=\"label\">\n\t\t\t\t<p>{label}</p>\n\t\t\t</div>\n\t\t{/if}\n\t\t<Toolbar\n\t\t\t{show_fullscreen_button}\n\t\t\t{is_fullscreen}\n\t\t\ton:click={toggle_fullscreen}\n\t\t\ton_copy={handle_copy}\n\t\t\t{show_copy_button}\n\t\t/>\n\t</div>\n\t<div\n\t\tbind:this={parent}\n\t\tclass=\"table-wrap\"\n\t\tclass:dragging\n\t\tclass:no-wrap={!wrap}\n\t\tstyle=\"height:{table_height}px\"\n\t\ton:keydown={(e) => handle_keydown(e)}\n\t\trole=\"grid\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<table\n\t\t\tbind:contentRect={t_rect}\n\t\t\tbind:this={table}\n\t\t\tclass:fixed-layout={column_widths.length != 0}\n\t\t>\n\t\t\t{#if label && label.length !== 0}\n\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t{/if}\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<th class=\"row-number-header\"></th>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:editing={header_edit === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle:width={column_widths.length ? column_widths[i] : undefined}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction} \"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t{#each max as { value, id }, j (id)}\n\t\t\t\t\t\t<td tabindex=\"-1\" bind:this={cells[j]}>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<Upload\n\t\t\t{upload}\n\t\t\t{stream_handler}\n\t\t\tflex={false}\n\t\t\tcenter={false}\n\t\t\tboundedheight={false}\n\t\t\tdisable_click={true}\n\t\t\t{root}\n\t\t\ton:load={({ detail }) =>\n\t\t\t\thandle_file_upload(\n\t\t\t\t\tdetail.data,\n\t\t\t\t\tcol_count,\n\t\t\t\t\t(head) => {\n\t\t\t\t\t\t_headers = make_headers(head);\n\t\t\t\t\t\treturn _headers;\n\t\t\t\t\t},\n\t\t\t\t\t(vals) => {\n\t\t\t\t\t\tvalues = vals;\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\tbind:dragging\n\t\t\taria_label={i18n(\"dataframe.drop_to_upload\")}\n\t\t>\n\t\t\t<VirtualTable\n\t\t\t\tbind:items={data}\n\t\t\t\t{max_height}\n\t\t\t\tbind:actual_height={table_height}\n\t\t\t\tbind:table_scrollbar_width={scrollbar_width}\n\t\t\t\tselected={selected_index}\n\t\t\t>\n\t\t\t\t{#if label && label.length !== 0}\n\t\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t\t{/if}\n\t\t\t\t<tr slot=\"thead\">\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<th class=\"row-number-header\"></th>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:focus={header_edit === i || selected_header === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle=\"width: var(--cell-width-{i});\"\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\ttoggle_header_button(i);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<div class=\"header-content\">\n\t\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t\t{max_chars}\n\t\t\t\t\t\t\t\t\t\tbind:value={_headers[i].value}\n\t\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t\tedit={header_edit === i}\n\t\t\t\t\t\t\t\t\t\ton:keydown={end_header_edit}\n\t\t\t\t\t\t\t\t\t\ton:dblclick={() => edit_header(i)}\n\t\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction}\"\n\t\t\t\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\thandle_sort(i);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{#if editable}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"cell-menu-button\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => toggle_header_menu(event, i)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t&#8942;\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\n\t\t\t\t<tr slot=\"tbody\" let:item let:index class:row_odd={index % 2 === 0}>\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<td class=\"row-number\" title={`Row ${index + 1}`}>{index + 1}</td>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each item as { value, id }, j (id)}\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\ton:touchstart={(event) => {\n\t\t\t\t\t\t\t\tconst touch = event.touches[0];\n\t\t\t\t\t\t\t\tconst mouseEvent = new MouseEvent(\"click\", {\n\t\t\t\t\t\t\t\t\tclientX: touch.clientX,\n\t\t\t\t\t\t\t\t\tclientY: touch.clientY,\n\t\t\t\t\t\t\t\t\tbubbles: true,\n\t\t\t\t\t\t\t\t\tcancelable: true,\n\t\t\t\t\t\t\t\t\tview: window\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\thandle_cell_click(mouseEvent, index, j);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:mousedown={(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:click={(event) => handle_cell_click(event, index, j)}\n\t\t\t\t\t\t\tstyle:width=\"var(--cell-width-{j})\"\n\t\t\t\t\t\t\tstyle={styling?.[index]?.[j] || \"\"}\n\t\t\t\t\t\t\tclass={is_cell_selected([index, j], selected_cells)}\n\t\t\t\t\t\t\tclass:menu-active={active_cell_menu &&\n\t\t\t\t\t\t\t\tactive_cell_menu.row === index &&\n\t\t\t\t\t\t\t\tactive_cell_menu.col === j}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\tbind:value={data[index][j].value}\n\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\tdisplay_value={display_value?.[index]?.[j]}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t\tedit={dequal(editing, [index, j])}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\ton:blur={() => {\n\t\t\t\t\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t\t\t\t\t\tparent.focus();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ton:focus={() => {\n\t\t\t\t\t\t\t\t\t\tconst row = index;\n\t\t\t\t\t\t\t\t\t\tconst col = j;\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t!selected_cells.some(([r, c]) => r === row && c === col)\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tselected_cells = [[row, col]];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t{clear_on_focus}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t{max_chars}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{#if editable && should_show_cell_menu([index, j], selected_cells, editable)}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"cell-menu-button\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => toggle_cell_menu(event, index, j)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t&#8942;\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</VirtualTable>\n\t\t</Upload>\n\t</div>\n</div>\n\n{#if active_cell_menu}\n\t<CellMenu\n\t\tx={active_cell_menu.x}\n\t\ty={active_cell_menu.y}\n\t\trow={active_cell_menu.row}\n\t\t{col_count}\n\t\t{row_count}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row || 0, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row || 0, \"below\")}\n\t\ton_add_column_left={() => add_col_at(active_cell_menu?.col || 0, \"left\")}\n\t\ton_add_column_right={() => add_col_at(active_cell_menu?.col || 0, \"right\")}\n\t\ton_delete_row={() => delete_row_at(active_cell_menu?.row || 0)}\n\t\ton_delete_col={() => delete_col_at(active_cell_menu?.col || 0)}\n\t\tcan_delete_rows={data.length > 1}\n\t\tcan_delete_cols={data[0].length > 1}\n\t\t{i18n}\n\t/>\n{/if}\n\n{#if active_header_menu !== null}\n\t<CellMenu\n\t\t{i18n}\n\t\tx={active_header_menu.x}\n\t\ty={active_header_menu.y}\n\t\trow={-1}\n\t\t{col_count}\n\t\t{row_count}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row ?? -1, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row ?? -1, \"below\")}\n\t\ton_add_column_left={() => add_col_at(active_header_menu?.col ?? -1, \"left\")}\n\t\ton_add_column_right={() =>\n\t\t\tadd_col_at(active_header_menu?.col ?? -1, \"right\")}\n\t\ton_delete_row={() => delete_row_at(active_cell_menu?.row ?? -1)}\n\t\ton_delete_col={() => delete_col_at(active_header_menu?.col ?? -1)}\n\t\tcan_delete_rows={false}\n\t\tcan_delete_cols={data[0].length > 1}\n\t/>\n{/if}\n\n<style>\n\t.table-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-2);\n\t}\n\n\t.table-wrap {\n\t\tposition: relative;\n\t\ttransition: 150ms;\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--table-radius);\n\t\toverflow: hidden;\n\t}\n\n\t.table-wrap:focus-within {\n\t\toutline: none;\n\t}\n\n\t.dragging {\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.no-wrap {\n\t\twhite-space: nowrap;\n\t}\n\n\ttable {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t\ttransition: 150ms;\n\t\twidth: var(--size-full);\n\t\ttable-layout: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t\tborder-collapse: separate;\n\t}\n\n\tdiv:not(.no-wrap) td {\n\t\toverflow-wrap: anywhere;\n\t}\n\n\tdiv.no-wrap td {\n\t\toverflow-x: hidden;\n\t}\n\n\ttable.fixed-layout {\n\t\ttable-layout: fixed;\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\tbox-shadow: var(--shadow-drop);\n\t}\n\n\ttr {\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t\ttext-align: left;\n\t}\n\n\ttr > * + * {\n\t\tborder-right-width: 0px;\n\t\tborder-left-width: 1px;\n\t\tborder-style: solid;\n\t\tborder-color: var(--border-color-primary);\n\t}\n\n\tth,\n\ttd {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\toutline: none;\n\t\tbox-shadow: inset 0 0 0 1px var(--ring-color);\n\t\tpadding: 0;\n\t}\n\n\tth:first-child {\n\t\tborder-top-left-radius: var(--table-radius);\n\t}\n\n\tth:last-child {\n\t\tborder-top-right-radius: var(--table-radius);\n\t}\n\n\tth.focus,\n\ttd.focus {\n\t\t--ring-color: var(--color-accent);\n\t\tbox-shadow: inset 0 0 0 2px var(--ring-color);\n\t\tz-index: var(--layer-1);\n\t}\n\n\tth.focus {\n\t\tz-index: var(--layer-2);\n\t}\n\n\ttr:last-child td:first-child {\n\t\tborder-bottom-left-radius: var(--table-radius);\n\t}\n\n\ttr:last-child td:last-child {\n\t\tborder-bottom-right-radius: var(--table-radius);\n\t}\n\n\ttr th {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tth svg {\n\t\tfill: currentColor;\n\t\tfont-size: 10px;\n\t}\n\n\t.sort-button {\n\t\tdisplay: flex;\n\t\tflex: none;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttransition: 150ms;\n\t\tcursor: pointer;\n\t\tpadding: var(--size-2);\n\t\tcolor: var(--body-text-color-subdued);\n\t}\n\n\t.sort-button:hover {\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.des {\n\t\ttransform: scaleY(-1);\n\t}\n\n\t.sort-button.sorted {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.editing {\n\t\tbackground: var(--table-editing);\n\t}\n\n\t.cell-wrap {\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\toutline: none;\n\t\tmin-height: var(--size-9);\n\t\tposition: relative;\n\t\theight: auto;\n\t}\n\n\t.header-content {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\toverflow: hidden;\n\t\tflex-grow: 1;\n\t\tmin-width: 0;\n\t\twhite-space: normal;\n\t\toverflow-wrap: break-word;\n\t\tword-break: break-word;\n\t}\n\n\t.row_odd {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.row_odd.focus {\n\t\tbackground: var(--background-fill-primary);\n\t}\n\n\t.cell-menu-button {\n\t\tflex-shrink: 0;\n\t\tdisplay: none;\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--block-radius);\n\t\twidth: var(--size-5);\n\t\theight: var(--size-5);\n\t\tmin-width: var(--size-5);\n\t\tpadding: 0;\n\t\tmargin-right: var(--spacing-sm);\n\t\tz-index: var(--layer-1);\n\t\tposition: absolute;\n\t\tright: var(--size-1);\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t}\n\n\t.cell-selected .cell-menu-button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.header-row {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t\theight: var(--size-6);\n\t\tmin-height: var(--size-6);\n\t}\n\n\t.label {\n\t\tflex: 1;\n\t}\n\n\t.label p {\n\t\tmargin: 0;\n\t\tcolor: var(--block-label-text-color);\n\t\tfont-size: var(--block-label-text-size);\n\t}\n\n\t.row-number,\n\t.row-number-header {\n\t\twidth: var(--size-7);\n\t\tmin-width: var(--size-7);\n\t\ttext-align: center;\n\t\tbackground: var(--table-even-background-fill);\n\t\tposition: sticky;\n\t\tleft: 0;\n\t\tfont-size: var(--input-text-size);\n\t\tcolor: var(--body-text-color);\n\t\tpadding: var(--size-1) var(--size-2);\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\twhite-space: nowrap;\n\t\tfont-weight: var(--weight-semibold);\n\t}\n\n\t.row-number-header {\n\t\tz-index: var(--layer-2);\n\t}\n\n\t.row-number {\n\t\tz-index: var(--layer-1);\n\t}\n\n\t:global(tbody > tr:nth-child(odd)) .row-number {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.cell-selected {\n\t\t--ring-color: var(--color-accent);\n\t\tbox-shadow: inset 0 0 0 2px var(--ring-color);\n\t\tz-index: var(--layer-1);\n\t\tposition: relative;\n\t}\n\n\t.cell-selected.no-top {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-bottom {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-left {\n\t\tbox-shadow:\n\t\t\tinset 0 2px 0 var(--ring-color),\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-right {\n\t\tbox-shadow:\n\t\t\tinset 0 2px 0 var(--ring-color),\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-left {\n\t\tbox-shadow:\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-right {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-bottom.no-left {\n\t\tbox-shadow:\n\t\t\tinset -2px 0 0 var(--ring-color),\n\t\t\tinset 0 2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-bottom.no-right {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset 0 2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-bottom {\n\t\tbox-shadow:\n\t\t\tinset 2px 0 0 var(--ring-color),\n\t\t\tinset -2px 0 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-left.no-right {\n\t\tbox-shadow:\n\t\t\tinset 0 2px 0 var(--ring-color),\n\t\t\tinset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-left.no-right {\n\t\tbox-shadow: inset 0 -2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-bottom.no-left.no-right {\n\t\tbox-shadow: inset 0 2px 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-left.no-top.no-bottom {\n\t\tbox-shadow: inset -2px 0 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-right.no-top.no-bottom {\n\t\tbox-shadow: inset 2px 0 0 var(--ring-color);\n\t}\n\n\t.cell-selected.no-top.no-bottom.no-left.no-right {\n\t\tbox-shadow: none;\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script context=\"module\" lang=\"ts\">\n\texport { default as BaseDataFrame } from \"./shared/Table.svelte\";\n\texport { default as BaseExample } from \"./Example.svelte\";\n</script>\n\n<script lang=\"ts\">\n\timport type { Gradio, SelectData } from \"@gradio/utils\";\n\timport { Block } from \"@gradio/atoms\";\n\timport Table from \"./shared/Table.svelte\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport type { Headers, Datatype, DataframeValue } from \"./shared/utils\";\n\texport let headers: Headers = [];\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: DataframeValue = {\n\t\tdata: [[\"\", \"\", \"\"]],\n\t\theaders: [\"1\", \"2\", \"3\"],\n\t\tmetadata: null\n\t};\n\texport let value_is_output = false;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let wrap: boolean;\n\texport let datatype: Datatype | Datatype[];\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let root: string;\n\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t\tclear_status: LoadingStatus;\n\t}>;\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let max_height: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\texport let interactive: boolean;\n\texport let show_fullscreen_button = false;\n\texport let max_chars: number | undefined = undefined;\n\texport let show_copy_button = false;\n\n\t$: _headers = [...(value.headers || headers)];\n\t$: cell_values = value.data ? [...value.data] : [];\n\t$: display_value = value?.metadata?.display_value\n\t\t? [...value?.metadata?.display_value]\n\t\t: null;\n\t$: styling =\n\t\t!interactive && value?.metadata?.styling\n\t\t\t? [...value?.metadata?.styling]\n\t\t\t: null;\n</script>\n\n<Block\n\t{visible}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\tcontainer={false}\n\t{scale}\n\t{min_width}\n\tallow_overflow={false}\n>\n\t<StatusTracker\n\t\tautoscroll={gradio.autoscroll}\n\t\ti18n={gradio.i18n}\n\t\t{...loading_status}\n\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t/>\n\t<Table\n\t\t{root}\n\t\t{label}\n\t\t{show_label}\n\t\t{row_count}\n\t\t{col_count}\n\t\tvalues={cell_values}\n\t\t{display_value}\n\t\t{styling}\n\t\theaders={_headers}\n\t\ton:change={(e) => {\n\t\t\tvalue = e.detail;\n\t\t\tgradio.dispatch(\"change\");\n\t\t}}\n\t\ton:input={(e) => gradio.dispatch(\"input\")}\n\t\ton:select={(e) => gradio.dispatch(\"select\", e.detail)}\n\t\t{wrap}\n\t\t{datatype}\n\t\t{latex_delimiters}\n\t\teditable={interactive}\n\t\t{max_height}\n\t\ti18n={gradio.i18n}\n\t\t{line_breaks}\n\t\t{column_widths}\n\t\tupload={(...args) => gradio.client.upload(...args)}\n\t\tstream_handler={(...args) => gradio.client.stream(...args)}\n\t\tbind:value_is_output\n\t\t{show_fullscreen_button}\n\t\t{max_chars}\n\t\t{show_copy_button}\n\t/>\n</Block>\n"],"names":["insert","target","input","anchor","ctx","set_data","t_value","dirty","markdowncode_changes","create_if_block_2","span","truncate_text","text","max_length","str","edit","$$props","value","display_value","styling","header","datatype","latex_delimiters","clear_on_focus","line_breaks","editable","root","max_chars","dispatch","createEventDispatcher","is_expanded","el","use_focus","node","_value","handle_blur","currentTarget","$$invalidate","handle_keydown","event","handle_click","$$value","display_text","get_key","i","create_if_block","height","svelte_virtual_table_viewport","append","table","thead","tbody","tfoot","get_computed_px_amount","elem","property","compStyle","items","max_height","actual_height","table_scrollbar_width","start","end","selected","average_height","bottom","contents","head_height","foot_height","height_map","mounted","rows","top","viewport","viewport_height","visible","viewport_box","is_browser","raf","cb","content_height","refresh_height_map","_items","scrollTop","row","tick","_h","row_height","remaining","scrollbar_height","filtered_height_map","v","a","b","scroll_and_render","n","direction","is_in_view","scroll_to_index","current","viewport_top","handle_scroll","e","scroll_top","is_start_overflow","sortedItems","row_top_border","actual_border_collapsed_width","new_start","y","row_heights","remaining_height","index","opts","align_end","_itemHeight","distance","_opts","onMount","ResizeObserverSingleton","data","svg","rect","path","create_if_block_1","create_if_block_3","create_if_block_4","create_if_block_5","icon","t1_value","t4_value","button0","button1","t1","t4","button","is_function","if_block0","div","x","on_add_row_above","on_add_row_below","on_add_column_left","on_add_column_right","col_count","row_count","on_delete_row","on_delete_col","can_delete_rows","can_delete_cols","i18n","menu_element","position_menu","viewport_width","menu_rect","new_x","new_y","is_header","can_add_rows","can_add_columns","show_fullscreen_button","show_copy_button","is_fullscreen","on_copy","copied","timer","copy_feedback","handle_copy","onDestroy","is_cell_selected","cell","selected_cells","col","r","c","up","down","left","right","get_range_selection","start_row","start_col","end_row","end_col","min_row","max_row","min_col","max_col","cells","j","handle_selection","_","handle_delete_key","new_data","should_show_cell_menu","get_next_cell_coordinates","shift_key","next_row","prev_row","move_cursor","key","current_coords","dir","get_current_indices","id","acc","arr","_acc","_data","k","handle_click_outside","parent","trigger","get_max","_d","max","guess_delimiter","possibleDelimiters","weedOut","delimiter","cache","checkLength","line","length","data_uri_to_blob","data_uri","byte_str","mime_str","ab","ia","copy_table_data","headers","header_row","h","table_data","all_data","write_to_clipboard","selected_data","is_selected","csv_data","textArea","error","handle_file_upload","make_headers","set_values","blob","reader","head","rest","dsvFormat","p","caption","th","toggle_class","div0","attr","th_aria_sort_value","set_style","div1","td","if_block","create_if_block_6","editablecell_changes","tr","td_title_value","t","dequal","editablecell_props","td_style_value","td_class_value","null_to_empty","style_changed","cellmenu_changes","create_if_block_9","if_block1","create_if_block_8","create_if_block_7","if_block4","div2","table_1","tr0","tr1","upload_1_changes","make_id","label","show_label","values","wrap","column_widths","show_row_numbers","upload","stream_handler","value_is_output","t_rect","els","editing","header_edit","selected_header","active_cell_menu","active_header_menu","dragging","get_data_at","_head","fill","_id","process_data","_values","data_row_length","_headers","old_headers","old_val","previous_headers","previous_data","trigger_change","current_headers","current_data","get_sort_status","name","_sort","input_el","next_coords","add_row","cell_id","next_cell","sort_direction","sort_by","handle_sort","edit_header","_select","end_header_edit","new_row","add_col","insert_index","new_w","handle_click_outside_util","set_cell_widths","widths","scrollbar_width","table_height","sort_data","_display_value","_styling","indices","temp_data","temp_display_value","temp_styling","originalIndex","sortedIndex","is_visible","observer","entries","entry","handle_resize","handle_fullscreen_change","handle_cell_click","toggle_cell_button","d","toggle_cell_menu","add_row_at","position","row_index","add_col_at","col_index","active_button","toggle_header_button","toggle_fullscreen","toggle_header_menu","afterUpdate","delete_row","delete_col","delete_row_at","delete_col_at","$$self","click_handler","touch","mouseEvent","click_handler_1","dblclick_handler","click_handler_3","load_handler","detail","vals","func","func_1","func_2","func_3","func_4","func_5","func_6","func_7","func_8","func_9","func_10","func_11","selected_index","table_changes","elem_id","elem_classes","scale","min_width","gradio","loading_status","interactive","clear_status_handler","args","input_handler","cell_values"],"mappings":"siCAuFCA,EAYCC,EAAAC,EAAAC,CAAA,gBATYC,EAAM,EAAA,CAAA,yCAGTA,EAAW,EAAA,CAAA,sHAKRA,EAAc,EAAA,CAAA,mCARdA,EAAM,EAAA,QAANA,EAAM,EAAA,CAAA,wFAqCjBA,EAAQ,CAAA,EAAGA,EAAY,EAAA,EAAGA,MAAiBA,EAAY,EAAA,GAAA,iEAAvDA,EAAQ,CAAA,EAAGA,EAAY,EAAA,EAAGA,MAAiBA,EAAY,EAAA,GAAA,KAAAC,GAAA,EAAAC,CAAA,2EAP9C,QAAAF,MAAa,eAAc,iDAG3B,iFAHAG,EAAA,OAAAC,EAAA,QAAAJ,MAAa,sQAHhBA,EAAY,EAAA,EAAAH,EAAAE,CAAA,+BAAZC,EAAY,EAAA,CAAA,uEA/BhBA,EAAI,CAAA,GAAAK,GAAAL,CAAA,0CA8BH,OAAAA,OAAa,OAAM,EAEdA,OAAa,WAAU,4HAP1BA,EAAO,CAAA,CAAA,oEAECA,EAAQ,CAAA,CAAA,yDALPA,EAAW,EAAA,CAAA,kBACVA,EAAM,CAAA,CAAA,+BAPxBJ,EA2BMC,EAAAS,EAAAP,CAAA,0CA1BKC,EAAY,EAAA,CAAA,iBACVA,EAAc,EAAA,CAAA,2CAlBtBA,EAAI,CAAA,gOAyBDA,EAAO,CAAA,CAAA,mCAECA,EAAQ,CAAA,CAAA,2DALPA,EAAW,EAAA,CAAA,8BACVA,EAAM,CAAA,CAAA,4FA5Ed,SAAAO,GACRC,EACAC,EAA4B,KAAA,CAEtB,MAAAC,EAAM,OAAOF,CAAI,SAClBC,GAAcC,EAAI,QAAUD,EAAmBC,EAC7CA,EAAI,MAAM,EAAGD,CAAU,EAAI,iCAnCxB,CAAA,KAAAE,CAAA,EAAAC,GACA,MAAAC,EAAyB,EAAA,EAAAD,GACzB,cAAAE,EAA+B,IAAA,EAAAF,GAC/B,QAAAG,EAAU,EAAA,EAAAH,GACV,OAAAI,EAAS,EAAA,EAAAJ,GACT,SAAAK,EAMC,KAAA,EAAAL,EACD,CAAA,iBAAAM,CAAA,EAAAN,GAKA,eAAAO,EAAiB,EAAA,EAAAP,GACjB,YAAAQ,EAAc,EAAA,EAAAR,GACd,SAAAS,EAAW,EAAA,EAAAT,EACX,CAAA,KAAAU,CAAA,EAAAV,GACA,UAAAW,EAA2B,IAAA,EAAAX,QAEhCY,EAAWC,SACbC,EAAc,GAEP,CAAA,GAAAC,CAAA,EAAAf,WAgBFgB,EAAUC,EAAA,CACd,OAAAV,QACHW,EAAS,EAAA,EAGV,sBAAA,IAAA,CACCD,EAAK,MAAA,gBAMEE,GACR,CAAA,cAAAC,GAAA,CAIAC,EAAA,GAAApB,EAAQmB,EAAc,KAAA,EACtBR,EAAS,MAAM,WAGPU,EAAeC,EAAA,CACnBA,EAAM,MAAQ,UACbxB,QACHE,EAAQiB,CAAA,EACRN,EAAS,MAAM,GACJR,QACXU,EAAe,CAAAA,CAAA,GAGjBF,EAAS,UAAWW,CAAK,EAGjB,SAAAC,GAAA,EACHzB,GAAS,CAAAK,QACbU,EAAe,CAAAA,CAAA,4KAQLC,EAAEU,wBACDP,EAAM,KAAA,ihBA3DnBG,EAAA,GAAGH,EAASjB,CAAA,qBAWZoB,EAAA,GAAGK,EAAeZ,EACfb,EACAN,GAAcO,GAAiBD,EAAOU,CAAS,CAAA,i9CCmOrB,KAAAvB,MAAK,KAAa,MAAAA,MAAK,yEAD1CA,EAAO,CAAA,CAAA,EAAU,MAAAuC,EAAAvC,GAAAA,EAAK,EAAA,EAAA,KAAK,CAAC,EAAE,mBAAnC,OAAIwC,GAAA,EAAA,qMAACxC,EAAO,CAAA,CAAA,sFAAZ,OAAIwC,GAAA,0JACiD;AAAA,MAEtD,6bAJGxC,EAAO,CAAA,EAAC,QAAUA,KAAQ,CAAC,EAAE,KAAK,QAAMyC,GAAAzC,CAAA,8XAN9B0C,EAAM,wBAAoB1C,EAAG,CAAA,EAAA,IAAA,2BAAyBA,EAAM,CAAA,EAAA,IAAA,8BAA4BA,EAAW,CAAA,EAAA,IAAA,8BAA4BA,EAAW,CAAA,EAAA,IAAA,iCAA+BA,EAAc,CAAA,EAAA,IAAA,UANzMJ,EAwB+BC,EAAA8C,EAAA5C,CAAA,EAvB9B6C,EAsBOD,EAAAE,CAAA,EAfND,EAEOC,EAAAC,CAAA,8CACPF,EAQOC,EAAAE,CAAA,iCACPH,EAEOC,EAAAG,CAAA,uGAjBIhD,EAAa,CAAA,CAAA,4FAOlBA,EAAO,CAAA,EAAC,QAAUA,KAAQ,CAAC,EAAE,KAAK,8NANEA,EAAG,CAAA,EAAA,IAAA,yCAAyBA,EAAM,CAAA,EAAA,IAAA,6CAA4BA,EAAW,CAAA,EAAA,IAAA,6CAA4BA,EAAW,CAAA,EAAA,IAAA,+CAA+BA,EAAc,CAAA,EAAA,IAAA,iKA3PpM0C,GAAS,OA0HJ,SAAAO,GAAuBC,EAAmBC,EAAA,CAC7C,GAAA,CAAAD,EACG,MAAA,GAEF,MAAAE,EAAY,iBAAiBF,CAAI,EAGhC,OADC,SAASE,EAAU,iBAAiBD,CAAQ,CAAA,sDAxI1C,CAAA,MAAAE,EAAA,EAAA,EAAAzC,EAEA,CAAA,WAAA0C,CAAA,EAAA1C,EACA,CAAA,cAAA2C,CAAA,EAAA3C,EACA,CAAA,sBAAA4C,CAAA,EAAA5C,GACA,MAAA6C,EAAQ,CAAA,EAAA7C,GACR,IAAA8C,EAAM,EAAA,EAAA9C,EACN,CAAA,SAAA+C,CAAA,EAAA/C,EAGPgD,EAAiB,GACjBC,EAAS,EACTC,EACAC,EAAc,EACdC,EAAc,EACdC,EAAA,CAAA,EACAC,EACAC,EACAC,GAAM,EACNC,EACAC,EAAkB,IAClBC,EAAA,CAAA,EACAC,EAIE,MAAAC,EAAA,OAAoB,OAAW,IAC/BC,EAAMD,EACT,OAAO,sBACNE,GAAiCA,QAIjCC,EAAiB,iBACNC,EAAmBC,EAAA,IAC7BR,IAAoB,eAIhB,UAAAS,CAAc,EAAAV,OACtBb,EAAwBa,EAAS,YAAcA,EAAS,WAAA,EAExDO,EAAiBR,IAAOW,EAAYhB,OAChCvB,EAAIiB,OAEDmB,EAAiBtB,GAAcd,EAAIsC,EAAO,QAAA,KAC5CE,EAAMb,EAAK3B,EAAIiB,CAAK,EACnBuB,IACJ/C,EAAA,GAAAyB,EAAMlB,EAAI,CAAA,EACJ,MAAAyC,GAAA,EACND,EAAMb,EAAK3B,EAAIiB,CAAK,GAEjB,IAAAyB,GAAKF,GAAK,sBAAwB,EAAA,OACjCE,KACJA,GAAKtB,SAEAuB,EAAclB,EAAWzB,CAAC,EAAI0C,GACpCN,GAAkBO,EAClB3C,GAAK,OAGNkB,EAAMlB,CAAA,EACA,MAAA4C,EAAYN,EAAO,OAASpB,EAE5B2B,GAAmBhB,EAAS,aAAeA,EAAS,aACtDgB,GAAmB,IACtBT,GAAkBS,IAGf,IAAAC,GAAsBrB,EAAW,OAAQsB,GAAa,OAAAA,GAAM,QAAQ,MACxE3B,EACC0B,GAAoB,QAAQE,EAAGC,KAAMD,EAAIC,GAAG,CAAC,EAC7CH,GAAoB,MAAA,EAErBrD,EAAA,EAAA4B,EAASuB,EAAYxB,CAAA,EACrBK,EAAW,OAASa,EAAO,OACrB,MAAAG,GAAA,EACD3B,EAEMsB,EAAiBtB,EAC3BrB,EAAA,GAAAsB,EAAgBqB,EAAiB,CAAA,OAEjCrB,EAAgBD,CAAA,EAJhBrB,EAAA,GAAAsB,EAAgBqB,EAAiB,CAAA,EAO5B,MAAAK,GAAA,iBAKQS,EAAkBC,EAAA,CAChCjB,EAAA,SAAA,WACYiB,GAAM,SAAA,OACX,MAAAC,EAAA,OAAmBD,GAAM,SAAW,GAAQE,GAAWF,CAAC,EAC1DC,IAAc,KAGdA,IAAc,QACX,MAAAE,GAAgBH,GAAK,SAAU,SAAA,CAAA,EAGlCC,IAAc,kBACXE,GAAgBH,EAAA,CAAK,SAAU,SAAA,EAAa,EAAI,cAKhDE,GAAWF,EAAA,OACbI,EAAU5B,GAAQA,EAAKwB,EAAIlC,CAAK,EACjC,GAAA,CAAAsC,GAAWJ,EAAIlC,EACZ,MAAA,OAEH,GAAA,CAAAsC,GAAWJ,GAAKjC,EAAM,EACnB,MAAA,WAGA,KAAA,CAAA,IAAKsC,GAAiB3B,EAAS,sBAAA,GAC/B,IAAAD,EAAK,OAAAP,IAAWkC,EAAQ,wBAE5B3B,OAAAA,EAAM4B,EAAe,GACjB,OAGJnC,GAASmC,EAAe1B,EACpB,WAGD,kBAaO2B,EAAcC,EAAA,CACtB,MAAAC,EAAa9B,EAAS,UAE5BF,EAAOL,EAAS,SACV,MAAAsC,EAAoBC,EAAY,OAAS5C,EAEzC6C,EAAiBrD,GAAuBkB,EAAK,CAAC,EAAG,kBAAkB,EAEnEoC,GAAgC,EAElCH,SACGN,GAAgBO,EAAY,OAAS,EAAA,CAAK,SAAU,MAAA,CAAA,MAGvDG,GAAY,EAEP,QAAAjB,GAAI,EAAGA,GAAIpB,EAAK,OAAQoB,IAAK,EACrCtB,EAAWR,EAAQ8B,EAAC,EAAIpB,EAAKoB,EAAC,EAAE,sBAAwB,EAAA,WAErD/C,EAAI,EAEJiE,GAAI1C,EAAcuC,EAAiB,EACnCI,EAAA,CAAA,EAEG,KAAAlE,EAAI6D,EAAY,QAAA,OAChBlB,GAAalB,EAAWzB,CAAC,GAAKoB,EAGhC,GAFJ8C,EAAYlE,CAAC,EAAI2C,GAEbsB,GAAItB,GAAaoB,GAAgCJ,EAAA,CAEpDK,GAAYhE,MACZ4B,GAAMqC,IAAK1C,EAAcuC,EAAiB,EAAA,QAG3CG,IAAKtB,GACL3C,GAAK,EAIC,IADPgE,GAAY,KAAK,IAAI,EAAGA,EAAS,EAC1BhE,EAAI6D,EAAY,QAAA,OAChBlB,GAAalB,EAAWzB,CAAC,GAAKoB,EAGhC,GAFJ6C,IAAKtB,GACL3C,GAAK,EACDiE,GAAIN,EAAa7B,aAItBb,EAAQ+C,EAAA,OACR9C,EAAMlB,CAAA,EACA,MAAA4C,GAAYiB,EAAY,OAAS3C,EACnCA,IAAQ,QACXA,EAAM,EAAA,EAEPzB,EAAA,EAAA2B,GAAkB6C,GAAI1C,GAAeL,CAAA,EACjC,IAAAiD,GAAmBvB,GAAYxB,EAE5B,KAAApB,EAAI6D,EAAY,QACtB7D,GAAK,EACLyB,EAAWzB,CAAC,EAAIoB,MAEjBC,EAAS8C,EAAA,EACJ,SAAS9C,CAAM,OACnBA,EAAS,GAAA,iBAIWiC,GACrBc,EACAC,EACAC,EAAY,GAAA,CAEN,MAAA7B,GAAA,QAEA8B,EAAcnD,EAEhB,IAAAoD,GAAWJ,EAAQG,EACnBD,IACHE,GAAWA,GAAW1C,EAAkByC,EAAchD,SAGjDsB,GAAmBhB,EAAS,aAAeA,EAAS,aACtDgB,GAAmB,IACtB2B,IAAY3B,IAGP,MAAA4B,EAAA,CACL,IAAKD,GACL,SAAU,SACP,GAAAH,GAGJxC,EAAS,SAAS4C,CAAK,EAexBC,GAAA,IAAA,CACC/C,EAAOL,EAAS,cAChBI,EAAU,EAAA,EACVW,EAAmBxB,CAAK,iBAYgBU,EAAW,KAAA,+DAGjCD,EAAQzB,yBASc2B,EAAW,KAAA,+DAjBxCK,EAAQhC,wBACDmC,EAAY2C,GAAA,QAAA,IAAA,IAAA,GAAA,kXAzO5B7C,EAAkBE,GAAc,QAAU,0BAkN7CvC,EAAA,GAAGoE,EAAchD,CAAA,wBA3Mda,GAAWQ,EAAU,IAAAG,EAAmBwB,CAAW,CAAA,uBAyDnDX,EAAkB/B,CAAQ,wBAoJ7B1B,EAAA,EAAGsC,EAAUE,EACV4B,EAAY,MAAM5C,EAAOC,CAAG,EAAE,KAAK0D,EAAM5E,KAChC,CAAA,MAAOA,EAAIiB,EAAO,KAAA2D,CAAA,IAE3Bf,EACC,MAAM,EAAI/C,EAAa+C,EAAY,OAAUzC,EAAiB,CAAC,EAC/D,IAAA,CAAKwD,EAAM5E,KACF,CAAA,MAAOA,EAAIiB,EAAO,KAAA2D,CAAA,wwCCvJ/BxH,EAeKC,EAAAwH,EAAAtH,CAAA,EAdJ6C,EAOCyE,EAAAC,CAAA,EACD1E,EAKCyE,EAAAE,CAAA,2YA/BF3H,EAeKC,EAAAwH,EAAAtH,CAAA,EAdJ6C,EAOCyE,EAAAC,CAAA,EACD1E,EAKCyE,EAAAE,CAAA,maAhCF3H,EAgBKC,EAAAwH,EAAAtH,CAAA,EAfJ6C,EAOCyE,EAAAC,CAAA,EACD1E,EAMCyE,EAAAE,CAAA,gaAjCF3H,EAgBKC,EAAAwH,EAAAtH,CAAA,EAfJ6C,EAOCyE,EAAAC,CAAA,EACD1E,EAMCyE,EAAAE,CAAA,mbAlCF3H,EAiBKC,EAAAwH,EAAAtH,CAAA,EAhBJ6C,EAQCyE,EAAAC,CAAA,EACD1E,EAMCyE,EAAAE,CAAA,sbAnCF3H,EAiBKC,EAAAwH,EAAAtH,CAAA,EAhBJ6C,EAQCyE,EAAAC,CAAA,EACD1E,EAMCyE,EAAAE,CAAA,uDAjBE,GAAAvH,MAAQ,mBAAkB,OAAAyC,GAmBrB,GAAAzC,MAAQ,kBAAiB,OAAAwH,GAmBzB,GAAAxH,MAAQ,gBAAe,OAAAK,GAkBvB,GAAAL,MAAQ,gBAAe,OAAAyH,GAkBvB,GAAAzH,MAAQ,aAAY,OAAA0H,GAiBpB,GAAA1H,MAAQ,gBAAe,OAAA2H,oNA9FrB,GAAA,CAAA,KAAAC,CAAA,EAAAhH,4NCwDRiH,EAAA7H,KAAK,yBAAyB,EAAA,aAI9B8H,EAAA9H,KAAK,yBAAyB,EAAA,uGAE3BA,EAAe,CAAA,GAAAyH,GAAAzH,CAAA,qMARpBJ,EAGQC,EAAAkI,EAAAhI,CAAA,sCACRH,EAGQC,EAAAmI,EAAAjI,CAAA,+HALN,CAAAgG,GAAA5F,EAAA,MAAA0H,KAAAA,EAAA7H,KAAK,yBAAyB,EAAA,KAAAC,GAAAgI,EAAAJ,CAAA,GAI9B,CAAA9B,GAAA5F,EAAA,MAAA2H,KAAAA,EAAA9H,KAAK,yBAAyB,EAAA,KAAAC,GAAAiI,EAAAJ,CAAA,EAE3B9H,EAAe,CAAA,6TAGjB6H,EAAA7H,KAAK,sBAAsB,EAAA,sJAF7BJ,EAGQC,EAAAsI,EAAApI,CAAA,gEAHUqI,GAAApI,OAAAA,EAAa,CAAA,EAAA,MAAA,KAAA,SAAA,uBAE7B,CAAA+F,GAAA5F,EAAA,MAAA0H,KAAAA,EAAA7H,KAAK,sBAAsB,EAAA,KAAAC,GAAAgI,EAAAJ,CAAA,2HAO5BA,EAAA7H,KAAK,2BAA2B,EAAA,aAIhC8H,EAAA9H,KAAK,4BAA4B,EAAA,4GAE9BA,EAAe,CAAA,GAAAwH,GAAAxH,CAAA,qMARpBJ,EAGQC,EAAAkI,EAAAhI,CAAA,sCACRH,EAGQC,EAAAmI,EAAAjI,CAAA,+HALN,CAAAgG,GAAA5F,EAAA,MAAA0H,KAAAA,EAAA7H,KAAK,2BAA2B,EAAA,KAAAC,GAAAgI,EAAAJ,CAAA,GAIhC,CAAA9B,GAAA5F,EAAA,MAAA2H,KAAAA,EAAA9H,KAAK,4BAA4B,EAAA,KAAAC,GAAAiI,EAAAJ,CAAA,EAE9B9H,EAAe,CAAA,8TAGjB6H,EAAA7H,KAAK,yBAAyB,EAAA,yJAFhCJ,EAGQC,EAAAsI,EAAApI,CAAA,gEAHUqI,GAAApI,OAAAA,EAAa,CAAA,EAAA,MAAA,KAAA,SAAA,uBAE7B,CAAA+F,GAAA5F,EAAA,MAAA0H,KAAAA,EAAA7H,KAAK,yBAAyB,EAAA,KAAAC,GAAAgI,EAAAJ,CAAA,2HA5B5BQ,EAAA,CAAArI,OAAaA,EAAY,EAAA,GAAAK,GAAAL,CAAA,IAgB1BA,EAAe,EAAA,GAAAyC,GAAAzC,CAAA,8FAjBrBJ,EAiCKC,EAAAyI,EAAAvI,CAAA,+DAhCE,CAAAC,OAAaA,EAAY,EAAA,mGAgB1BA,EAAe,EAAA,gOAjET,CAAA,EAAAuI,CAAA,EAAA3H,EACA,CAAA,EAAA6F,CAAA,EAAA7F,EACA,CAAA,iBAAA4H,CAAA,EAAA5H,EACA,CAAA,iBAAA6H,CAAA,EAAA7H,EACA,CAAA,mBAAA8H,CAAA,EAAA9H,EACA,CAAA,oBAAA+H,CAAA,EAAA/H,EACA,CAAA,IAAAoE,CAAA,EAAApE,EACA,CAAA,UAAAgI,CAAA,EAAAhI,EACA,CAAA,UAAAiI,CAAA,EAAAjI,EACA,CAAA,cAAAkI,CAAA,EAAAlI,EACA,CAAA,cAAAmI,CAAA,EAAAnI,EACA,CAAA,gBAAAoI,CAAA,EAAApI,EACA,CAAA,gBAAAqI,CAAA,EAAArI,EAEA,CAAA,KAAAsI,CAAA,EAAAtI,EACPuI,EAMJjC,GAAA,IAAA,CACCkC,OAGQ,SAAAA,IAAA,CACH,GAAA,CAAAD,EAAA,OAEC,MAAAE,EAAiB,OAAO,WACxB/E,EAAkB,OAAO,YACzBgF,EAAYH,EAAa,wBAE3B,IAAAI,EAAQhB,EAAI,GACZiB,GAAQ/C,EAAI,GAEZ8C,EAAQD,EAAU,MAAQD,IAC7BE,EAAQhB,EAAIe,EAAU,MAAQ,IAG3BE,GAAQF,EAAU,OAAShF,IAC9BkF,GAAQ/C,EAAI6C,EAAU,OAAS,QAGhCH,EAAa,MAAM,QAAUI,CAAK,KAAAJ,CAAA,MAClCA,EAAa,MAAM,OAASK,EAAK,KAAAL,CAAA,cAMTX,UAIAC,UAYAC,UAIAC,8CAtBVQ,EAAY9G,mnBA/B3BJ,EAAA,GAAGwH,EAAYzE,IAAQ,EAAA,qBACpB/C,EAAA,GAAAyH,EAAeb,EAAU,CAAC,IAAM,SAAA,oBAChC5G,EAAA,GAAA0H,EAAkBf,EAAU,CAAC,IAAM,SAAA,ooDCc/B5I,EAAM,CAAA,EAAA,0HAHCA,EAAM,CAAA,EAAG,sBAAwB,iBAAiB,gBACvDA,EAAM,CAAA,EAAG,sBAAwB,iBAAiB,UAJ1DJ,EAWQC,EAAAsI,EAAApI,CAAA,yCATGC,EAAW,CAAA,CAAA,mJACTA,EAAM,CAAA,EAAG,sBAAwB,0DACtCA,EAAM,CAAA,EAAG,sBAAwB,8gBAgBnCA,EAAa,CAAA,EAAA,0HAHNA,EAAa,CAAA,EAAG,kBAAoB,kBAAkB,gBAC3DA,EAAa,CAAA,EAAG,kBAAoB,kBAAkB,UAJ9DJ,EAWQC,EAAAsI,EAAApI,CAAA,gMARKC,EAAa,CAAA,EAAG,kBAAoB,2DACzCA,EAAa,CAAA,EAAG,kBAAoB,2dAnBxCA,EAAgB,CAAA,GAAAK,GAAAL,CAAA,IAchBA,EAAsB,CAAA,GAAAyC,GAAAzC,CAAA,sJAf5BJ,EA6BKC,EAAAyI,EAAAvI,CAAA,sDA5BCC,EAAgB,CAAA,gGAchBA,EAAsB,CAAA,2MAzChB,uBAAA4J,EAAyB,EAAA,EAAAhJ,GACzB,iBAAAiJ,EAAmB,EAAA,EAAAjJ,GACnB,cAAAkJ,EAAgB,EAAA,EAAAlJ,EAChB,CAAA,QAAAmJ,CAAA,EAAAnJ,EAEPoJ,EAAS,GACTC,EAEK,SAAAC,GAAA,KACRF,EAAS,EAAA,EACLC,GAAO,aAAaA,CAAK,EAC7BA,EAAQ,oBACPD,EAAS,EAAA,GACP,KAGW,eAAAG,GAAA,CACR,MAAAJ,EAAA,EACNG,IAGDE,GAAA,IAAA,CACKH,GAAO,aAAaA,CAAK,kyBCtBf,SAAAI,GACfC,EACAC,EACS,CACH,KAAA,CAACvF,EAAKwF,CAAG,EAAIF,EACf,GAAA,CAACC,EAAe,KAAK,CAAC,CAACE,EAAGC,CAAC,IAAMD,IAAMzF,GAAO0F,IAAMF,CAAG,EAAU,MAAA,GAErE,MAAMG,EAAKJ,EAAe,KAAK,CAAC,CAACE,EAAGC,CAAC,IAAMD,IAAMzF,EAAM,GAAK0F,IAAMF,CAAG,EAC/DI,EAAOL,EAAe,KAAK,CAAC,CAACE,EAAGC,CAAC,IAAMD,IAAMzF,EAAM,GAAK0F,IAAMF,CAAG,EACjEK,EAAON,EAAe,KAAK,CAAC,CAACE,EAAGC,CAAC,IAAMD,IAAMzF,GAAO0F,IAAMF,EAAM,CAAC,EACjEM,EAAQP,EAAe,KAAK,CAAC,CAACE,EAAGC,CAAC,IAAMD,IAAMzF,GAAO0F,IAAMF,EAAM,CAAC,EAExE,MAAO,gBAAgBG,EAAK,UAAY,EAAE,GAAGC,EAAO,aAAe,EAAE,GAAGC,EAAO,WAAa,EAAE,GAAGC,EAAQ,YAAc,EAAE,EAC1H,CAEgB,SAAAC,GACftH,EACAC,EACmB,CACb,KAAA,CAACsH,EAAWC,CAAS,EAAIxH,EACzB,CAACyH,EAASC,CAAO,EAAIzH,EACrB0H,EAAU,KAAK,IAAIJ,EAAWE,CAAO,EACrCG,EAAU,KAAK,IAAIL,EAAWE,CAAO,EACrCI,EAAU,KAAK,IAAIL,EAAWE,CAAO,EACrCI,EAAU,KAAK,IAAIN,EAAWE,CAAO,EAErCK,EAA0B,CAAA,EAChC,QAAShJ,EAAI4I,EAAS5I,GAAK6I,EAAS7I,IACnC,QAASiJ,EAAIH,EAASG,GAAKF,EAASE,IACnCD,EAAM,KAAK,CAAChJ,EAAGiJ,CAAC,CAAC,EAGZ,OAAAD,CACR,CAEgB,SAAAE,GACf3F,EACAwE,EACApI,EACmB,CACnB,GAAIA,EAAM,UAAYoI,EAAe,OAAS,EACtC,OAAAQ,GACNR,EAAeA,EAAe,OAAS,CAAC,EACxCxE,CAAA,EAIE,GAAA5D,EAAM,SAAWA,EAAM,QAAS,CACnC,MAAMyE,EAAQ2D,EAAe,UAC5B,CAAC,CAACE,EAAGC,CAAC,IAAMD,IAAM1E,EAAQ,CAAC,GAAK2E,IAAM3E,EAAQ,CAAC,CAAA,EAEhD,OAAIa,IAAU,GACN,CAAC,GAAG2D,EAAgBxE,CAAO,EAE5BwE,EAAe,OAAO,CAACoB,EAAG,IAAM,IAAM/E,CAAK,CACnD,CAEA,MAAO,CAACb,CAAO,CAChB,CAEgB,SAAA6F,GACfxE,EACAmD,EACe,CACT,MAAAsB,EAAWzE,EAAK,IAAKpC,GAAQ,CAAC,GAAGA,CAAG,CAAC,EAC3C,OAAAuF,EAAe,QAAQ,CAAC,CAACvF,EAAKwF,CAAG,IAAM,CAClCqB,EAAS7G,CAAG,GAAK6G,EAAS7G,CAAG,EAAEwF,CAAG,IACrCqB,EAAS7G,CAAG,EAAEwF,CAAG,EAAI,CAAE,GAAGqB,EAAS7G,CAAG,EAAEwF,CAAG,EAAG,MAAO,EAAG,EACzD,CACA,EACMqB,CACR,CAwBgB,SAAAC,GACfxB,EACAC,EACAlJ,EACU,CACJ,KAAA,CAAC2D,EAAKwF,CAAG,EAAIF,EACnB,OACCjJ,GACAkJ,EAAe,SAAW,GAC1BA,EAAe,CAAC,EAAE,CAAC,IAAMvF,GACzBuF,EAAe,CAAC,EAAE,CAAC,IAAMC,CAE3B,CAEgB,SAAAuB,GACfhG,EACAqB,EACA4E,EACyB,CACnB,KAAA,CAAChH,EAAKwF,CAAG,EAAIzE,EACbH,EAAYoG,EAAY,GAAK,EAEnC,GAAI5E,EAAKpC,CAAG,IAAIwF,EAAM5E,CAAS,EACvB,MAAA,CAACZ,EAAKwF,EAAM5E,CAAS,EAG7B,MAAMqG,EAAWjH,GAAOY,EAAY,EAAI,EAAI,GACtCsG,EAAWlH,GAAOY,EAAY,EAAI,GAAK,GAE7C,OAAIA,EAAY,GAAKwB,EAAK6E,CAAQ,IAAI,CAAC,EAC/B,CAACA,EAAU,CAAC,EAGhBrG,EAAY,GAAKwB,EAAK8E,CAAQ,IAAI9E,EAAK,CAAC,EAAE,OAAS,CAAC,EAChD,CAAC8E,EAAU9E,EAAK,CAAC,EAAE,OAAS,CAAC,EAG9B,EACR,CAEgB,SAAA+E,GACfC,EACAC,EACAjF,EACyB,CACzB,MAAMkF,EAAM,CACX,WAAY,CAAC,EAAG,CAAC,EACjB,UAAW,CAAC,EAAG,EAAE,EACjB,UAAW,CAAC,EAAG,CAAC,EAChB,QAAS,CAAC,GAAI,CAAC,GACdF,CAAG,EAEC5J,EAAI6J,EAAe,CAAC,EAAIC,EAAI,CAAC,EAC7Bb,EAAIY,EAAe,CAAC,EAAIC,EAAI,CAAC,EAE/B,OAAA9J,EAAI,GAAKiJ,GAAK,EACV,GAGQrE,EAAK5E,CAAC,IAAIiJ,CAAC,EAEnB,CAACjJ,EAAGiJ,CAAC,EAEN,EACR,CAEgB,SAAAc,GACfC,EACApF,EACmB,CACnB,OAAOA,EAAK,OACX,CAACqF,EAAKC,EAAKlK,IAAM,CAChB,MAAMiJ,EAAIiB,EAAI,OACb,CAACC,EAAMC,EAAOC,IAAOL,IAAOI,EAAM,GAAKC,EAAIF,EAC3C,EAAA,EAED,OAAOlB,IAAM,GAAKgB,EAAM,CAACjK,EAAGiJ,CAAC,CAC9B,EACA,CAAC,GAAI,EAAE,CAAA,CAET,CAEgB,SAAAqB,GACf3K,EACA4K,EACU,CACV,KAAM,CAACC,CAAO,EAAI7K,EAAM,aAAa,EAC9B,MAAA,CAAC4K,EAAO,SAASC,CAAO,CAChC,CClLO,SAASC,GAAQC,EAA6B,CACpD,GAAI,CAACA,GAAMA,EAAG,SAAW,GAAK,CAACA,EAAG,CAAC,EAAG,MAAO,GAC7C,IAAIC,EAAMD,EAAG,CAAC,EAAE,MAAM,EACtB,QAAS1K,EAAI,EAAGA,EAAI0K,EAAG,OAAQ1K,IAC9B,QAASiJ,EAAI,EAAGA,EAAIyB,EAAG1K,CAAC,EAAE,OAAQiJ,IAC7B,GAAG0B,EAAI1B,CAAC,EAAE,KAAK,GAAG,OAAS,GAAGyB,EAAG1K,CAAC,EAAEiJ,CAAC,EAAE,KAAK,GAAG,SAClD0B,EAAI1B,CAAC,EAAIyB,EAAG1K,CAAC,EAAEiJ,CAAC,GAIZ,OAAA0B,CACR,CAEgB,SAAAC,GACf5M,EACA6M,EACW,CACJ,OAAAA,EAAmB,OAAOC,CAAO,EAExC,SAASA,EAAQC,EAA4B,CAC5C,IAAIC,EAAQ,GACZ,OAAOhN,EAAK,MAAM;AAAA,CAAI,EAAE,MAAMiN,CAAW,EAEzC,SAASA,EAAYC,EAAuB,CAC3C,GAAI,CAACA,EAAa,MAAA,GAClB,IAAIC,EAASD,EAAK,MAAMH,CAAS,EAAE,OACnC,OAAIC,EAAQ,IAAWA,EAAAG,GAChBH,IAAUG,GAAUA,EAAS,CACrC,CACD,CACD,CAEO,SAASC,GAAiBC,EAAwB,CACxD,MAAMC,EAAW,KAAKD,EAAS,MAAM,GAAG,EAAE,CAAC,CAAC,EACtCE,EAAWF,EAAS,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,EAC5DG,EAAK,IAAI,YAAYF,EAAS,MAAM,EACpCG,EAAK,IAAI,WAAWD,CAAE,EAC5B,QAAS,EAAI,EAAG,EAAIF,EAAS,OAAQ,IACpCG,EAAG,CAAC,EAAIH,EAAS,WAAW,CAAC,EAEvB,OAAA,IAAI,KAAK,CAACE,CAAE,EAAG,CAAE,KAAMD,EAAU,CACzC,CAEsB,eAAAG,GACrB9G,EACA+G,EACA5D,EACgB,CAChB,GAAI,CAACA,GAAkBA,EAAe,SAAW,EAAG,CACnD,MAAM6D,EAAaD,EAChBA,EAAQ,IAAKE,GAAM,OAAOA,EAAE,KAAK,CAAC,EAAE,KAAK,GAAG,EAC5C,GACGC,EAAalH,EACjB,IAAKpC,GAAQA,EAAI,IAAKsF,GAAS,OAAOA,EAAK,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,EAC5D,KAAK;AAAA,CAAI,EAELiE,EAAWH,EAAa,GAAGA,CAAU;AAAA,EAAKE,CAAU,GAAKA,EAC/D,MAAME,GAAmBD,CAAQ,EACjC,MACD,CAEM,MAAAnD,EAAU,KAAK,IAAI,GAAGb,EAAe,IAAI,CAAC,CAACE,CAAC,IAAMA,CAAC,CAAC,EACpDY,EAAU,KAAK,IAAI,GAAGd,EAAe,IAAI,CAAC,CAACE,CAAC,IAAMA,CAAC,CAAC,EACpDa,EAAU,KAAK,IAAI,GAAGf,EAAe,IAAI,CAAC,CAACoB,EAAGjB,CAAC,IAAMA,CAAC,CAAC,EACvDa,EAAU,KAAK,IAAI,GAAGhB,EAAe,IAAI,CAAC,CAACoB,EAAGjB,CAAC,IAAMA,CAAC,CAAC,EAEvD+D,EAAgB,CAAA,EACtB,QAASjM,EAAI4I,EAAS5I,GAAK6I,EAAS7I,IAAK,CACxC,MAAMwC,EAAM,CAAA,EACZ,QAASyG,EAAIH,EAASG,GAAKF,EAASE,IAAK,CAClC,MAAAiD,EAAcnE,EAAe,KAAK,CAAC,CAACE,EAAGC,CAAC,IAAMD,IAAMjI,GAAKkI,IAAMe,CAAC,EAClEzG,EAAA,KAAK0J,EAAc,OAAOtH,EAAK5E,CAAC,EAAEiJ,CAAC,EAAE,KAAK,EAAI,EAAE,CACrD,CACAgD,EAAc,KAAKzJ,EAAI,KAAK,GAAG,CAAC,CACjC,CAEA,MAAMwJ,GAAmBC,EAAc,KAAK;AAAA,CAAI,CAAC,CAClD,CAEA,eAAeD,GAAmBG,EAAiC,CAC9D,GAAA,CACH,GAAI,cAAe,UACZ,MAAA,UAAU,UAAU,UAAUA,CAAQ,MACtC,CACA,MAAAC,EAAW,SAAS,cAAc,UAAU,EAClDA,EAAS,MAAQD,EACjBC,EAAS,MAAM,SAAW,WAC1BA,EAAS,MAAM,KAAO,YACb,SAAA,KAAK,QAAQA,CAAQ,EAC9BA,EAAS,OAAO,EAEhB,SAAS,YAAY,MAAM,EAC3BA,EAAS,OAAO,CACjB,QACQC,EAAO,CACP,QAAA,MAAM,6BAA8BA,CAAK,CAClD,CACD,CAyBO,SAASC,GACfjB,EACAjF,EACAmG,EACAC,EACO,CACD,MAAAC,EAAOrB,GAAiBC,CAAQ,EAChCqB,EAAS,IAAI,WACZA,EAAA,iBAAiB,UAAYhJ,GAAM,CACzC,GAAI,CAACA,GAAG,QAAQ,QAAU,OAAOA,EAAE,OAAO,QAAW,SAAU,OACzD,KAAA,CAACqH,CAAS,EAAIH,GAAgBlH,EAAE,OAAO,OAAQ,CAAC,IAAK,GAAI,CAAC,EAC1D,CAACiJ,EAAM,GAAGC,CAAI,EAAIC,GAAU9B,CAAS,EAAE,UAAUrH,EAAE,OAAO,MAAM,EACzD6I,EAAAnG,EAAU,CAAC,IAAM,QAAUuG,EAAK,MAAM,EAAGvG,EAAU,CAAC,CAAC,EAAIuG,CAAI,EAC1EH,EAAWI,CAAI,CAAA,CACf,EACDF,EAAO,WAAWD,CAAI,CACvB,6cCqnBQjP,EAAK,CAAA,CAAA,0EADVJ,EAEKC,EAAAyI,EAAAvI,CAAA,EADJ6C,EAAa0F,EAAAgH,CAAA,8BAATtP,EAAK,CAAA,CAAA,wEA2BiBA,EAAK,CAAA,CAAA,iCAA/BJ,EAAyCC,EAAA0P,EAAAxP,CAAA,8BAAfC,EAAK,CAAA,CAAA,mHAK7BJ,EAAkCC,EAAA2P,EAAAzP,CAAA,yJAczB,MACF,0XAQgBC,EAAc,EAAA,EAAA,gBAAA,EAFpByP,EAAAC,EAAA,SAAA1P,QAAYA,EAAC,GAAA,CAAA,EAChByP,EAAAC,EAAA,MAAA1P,EAAY,EAAA,IAAAA,EAAK,GAAA,GAAAA,QAAmB,KAAK,yCAjB3C2P,EAAAH,EAAA,YAAAI,EAAA5P,EAAgB,EAAA,EAAAA,EAAO,GAAA,EAAAA,MAASA,EAAc,EAAA,CAAA,CAAA,+BAD1CyP,EAAAD,EAAA,UAAAxP,QAAgBA,EAAC,GAAA,CAAA,EAEnB6P,GAAAL,EAAA,QAAAxP,MAAc,OAASA,MAAcA,EAAC,GAAA,CAAA,EAAI,MAAS,uBAHjEJ,EAiCIC,EAAA2P,EAAAzP,CAAA,EA5BH6C,EA2BK4M,EAAAM,CAAA,sBAfJlN,EAcKkN,EAAAJ,CAAA,EATJ9M,EAQK8M,EAAArI,CAAA,EADJzE,EAAsDyE,EAAAE,CAAA,gPATnCvH,EAAc,EAAA,EAAA,yDAFpByP,EAAAC,EAAA,SAAA1P,QAAYA,EAAC,GAAA,CAAA,wBAChByP,EAAAC,EAAA,MAAA1P,EAAY,EAAA,IAAAA,EAAK,GAAA,GAAAA,QAAmB,KAAK,GAjB3C,CAAA+F,GAAA5F,EAAA,CAAA,EAAA,WAAAyP,KAAAA,EAAA5P,EAAgB,EAAA,EAAAA,EAAO,GAAA,EAAAA,MAASA,EAAc,EAAA,CAAA,mDAD1CyP,EAAAD,EAAA,UAAAxP,QAAgBA,EAAC,GAAA,CAAA,gBAEnB6P,GAAAL,EAAA,QAAAxP,MAAc,OAASA,MAAcA,EAAC,GAAA,CAAA,EAAI,MAAS,gNA2CpD,MAAM,QAAQA,EAAQ,CAAA,CAAA,EAAIA,KAASA,EAAC,GAAA,CAAA,EAAIA,EAAQ,CAAA,OACpD,MACF,kQARPJ,EAaIC,EAAAkQ,EAAAhQ,CAAA,EAZH6C,EAWKmN,EAAAzH,CAAA,oLANO,MAAM,QAAQtI,EAAQ,CAAA,CAAA,EAAIA,KAASA,EAAC,GAAA,CAAA,EAAIA,EAAQ,CAAA,iPA2CpCA,EAAK,CAAA,CAAA,iCAA/BJ,EAAyCC,EAAA0P,EAAAxP,CAAA,8BAAfC,EAAK,CAAA,CAAA,uCAD3BgQ,EAAAhQ,EAAS,CAAA,GAAAA,EAAM,CAAA,EAAA,SAAW,GAACiQ,GAAAjQ,CAAA,kEAA3BA,EAAS,CAAA,GAAAA,EAAM,CAAA,EAAA,SAAW,+LAK7BJ,EAAkCC,EAAA2P,EAAAzP,CAAA,uLAiD/BH,EAKQC,EAAAsI,EAAApI,CAAA,wRAnCD,KAAAC,QAAgBA,EAAC,GAAA,qCAJXA,EAAQ,EAAA,EAACA,EAAC,GAAA,CAAA,EAAE,QAAK,iBAAjBA,EAAQ,EAAA,EAACA,EAAC,GAAA,CAAA,EAAE,OACfA,EAAG,EAAA,EAACA,EAAE,GAAA,CAAA,EAAE,QAAK,cAAbA,EAAG,EAAA,EAACA,EAAE,GAAA,CAAA,EAAE,kGAILA,EAAe,EAAA,CAAA,wEA4BxBA,EAAQ,CAAA,GAAA0H,GAAA1H,CAAA,iaAnBSA,EAAc,EAAA,EAAA,gBAAA,sBAFpByP,EAAAtH,EAAA,SAAAnI,QAAYA,EAAC,GAAA,CAAA,EAChByP,EAAAtH,EAAA,MAAAnI,EAAY,EAAA,IAAAA,EAAK,GAAA,GAAAA,QAAmB,KAAK,qFAvB5C2P,EAAAH,EAAA,YAAAI,EAAA5P,EAAgB,EAAA,EAAAA,EAAO,GAAA,EAAAA,MAASA,EAAc,EAAA,CAAA,CAAA,mCACzBA,EAAC,GAAA,EAAA,GAAA,+BAFpByP,EAAAD,EAAA,QAAAxP,EAAgB,EAAA,IAAAA,EAAK,GAAA,GAAAA,QAAoBA,EAAC,GAAA,CAAA,uBADxDJ,EAsDIC,EAAA2P,EAAAzP,CAAA,EA9CH6C,EA6CK4M,EAAAM,CAAA,EA5CJlN,EAkCKkN,EAAAJ,CAAA,sBApBJ9M,EAmBQ8M,EAAAvH,CAAA,EATPvF,EAQKuF,EAAAd,CAAA,EADJzE,EAAsDyE,EAAAE,CAAA,8MAxBjDpH,EAAA,CAAA,EAAA,QAAAA,EAAA,CAAA,EAAA,IAAA+P,EAAA,KAAAlQ,QAAgBA,EAAC,GAAA,uFAJXA,EAAQ,EAAA,EAACA,EAAC,GAAA,CAAA,EAAE,mDACfA,EAAG,EAAA,EAACA,EAAE,GAAA,CAAA,EAAE,wEAaGA,EAAc,EAAA,EAAA,yDAFpByP,EAAAtH,EAAA,SAAAnI,QAAYA,EAAC,GAAA,CAAA,wBAChByP,EAAAtH,EAAA,MAAAnI,EAAY,EAAA,IAAAA,EAAK,GAAA,GAAAA,QAAmB,KAAK,EAoBjDA,EAAQ,CAAA,6DA3CH,CAAA+F,GAAA5F,EAAA,CAAA,EAAA,WAAAyP,KAAAA,EAAA5P,EAAgB,EAAA,EAAAA,EAAO,GAAA,EAAAA,MAASA,EAAc,EAAA,CAAA,6EACzBA,EAAC,GAAA,EAAA,GAAA,6BAFpByP,EAAAD,EAAA,QAAAxP,EAAgB,EAAA,IAAAA,EAAK,GAAA,GAAAA,QAAoBA,EAAC,GAAA,CAAA,uJALpDA,EAAgB,EAAA,GAAA2H,GAAA,OAGd3H,EAAQ,EAAA,CAAA,aAAsBA,EAAE,GAAA,kBAArC,OAAIwC,GAAA,EAAA,gLAJP5C,EA6DIC,EAAAsQ,EAAApQ,CAAA,sFA5DEC,EAAgB,EAAA,qFAGdA,EAAQ,EAAA,CAAA,8EAAb,OAAIwC,GAAA,kJA6D8CtC,EAAAF,OAAQ,EAAC,4EAAvB2P,EAAAI,EAAA,QAAAK,EAAA,OAAApQ,OAAQ,CAAC,EAAA,UAA9CJ,EAAiEC,EAAAkQ,EAAAhQ,CAAA,iBAAdI,EAAA,CAAA,EAAA,WAAAD,KAAAA,EAAAF,OAAQ,EAAC,KAAAC,GAAAoQ,EAAAnQ,CAAA,EAAvBC,EAAA,CAAA,EAAA,WAAAiQ,KAAAA,EAAA,OAAApQ,OAAQ,CAAC,gNAwD3CJ,EAKQC,EAAAsI,EAAApI,CAAA,sGANJC,EAAQ,CAAA,GAAI8L,GAAuB,CAAA9L,OAAOA,EAAC,GAAA,CAAA,EAAGA,EAAc,EAAA,EAAEA,EAAQ,CAAA,CAAA,8BAlC7CA,EAAC,GAAA,CAAA,2IAWfA,EAAa,EAAA,IAAGA,EAAK,GAAA,CAAA,IAAIA,EAAC,GAAA,CAAA,wDAInC,KAAAsQ,GAAOtQ,EAAU,EAAA,EAAA,CAAAA,OAAOA,EAAC,GAAA,CAAA,CAAA,WACrB,MAAM,QAAQA,EAAQ,CAAA,CAAA,EAAIA,KAASA,EAAC,GAAA,CAAA,EAAIA,EAAQ,CAAA,kDAP9CA,EAAK,EAAA,EAAAA,EAAO,GAAA,CAAA,EAAAA,QAAG,QAAK,SAApBuQ,EAAA,MAAAvQ,EAAK,EAAA,EAAAA,EAAO,GAAA,CAAA,EAAAA,QAAG,OAClBA,EAAG,EAAA,EAACA,EAAE,GAAA,CAAA,EAAE,QAAK,cAAbA,EAAG,EAAA,EAACA,EAAE,GAAA,CAAA,EAAE,8XATZ2P,EAAAI,EAAA,QAAAS,EAAAxQ,EAAU,EAAA,IAAAA,EAAS,GAAA,CAAA,IAAAA,SAAM,EAAE,EAC3B2P,EAAAI,EAAA,QAAAU,EAAAC,GAAArG,GAAkB,CAAArK,EAAO,GAAA,EAAAA,QAAIA,EAAc,EAAA,CAAA,CAAA,EAAA,gBAAA,oBAC/BA,EAAgB,EAAA,GAClCA,EAAgB,EAAA,EAAC,MAAQA,EAAK,GAAA,GAC9BA,EAAgB,EAAA,EAAC,MAAQA,EAAC,GAAA,CAAA,uCAvB5BJ,EA6DIC,EAAAkQ,EAAAhQ,CAAA,EApCH6C,EAmCKmN,EAAAzH,CAAA,+LA/BYtI,EAAa,EAAA,IAAGA,EAAK,GAAA,CAAA,IAAIA,EAAC,GAAA,CAAA,mGAInCG,EAAA,CAAA,EAAA,WAAAA,EAAA,CAAA,EAAA,YAAA+P,EAAA,KAAAI,GAAOtQ,EAAU,EAAA,EAAA,CAAAA,OAAOA,EAAC,GAAA,CAAA,CAAA,sCACrB,MAAM,QAAQA,EAAQ,CAAA,CAAA,EAAIA,KAASA,EAAC,GAAA,CAAA,EAAIA,EAAQ,CAAA,qIAP9CkQ,EAAA,MAAAlQ,EAAK,EAAA,EAAAA,EAAO,GAAA,CAAA,EAAAA,QAAG,kEAClBA,EAAG,EAAA,EAACA,EAAE,GAAA,CAAA,EAAE,8DAwBbA,EAAQ,CAAA,GAAI8L,GAAuB,CAAA9L,OAAOA,EAAC,GAAA,CAAA,EAAGA,EAAc,EAAA,EAAEA,EAAQ,CAAA,CAAA,gEAjCrE,CAAA+F,GAAA5F,EAAA,CAAA,EAAA,QAAAA,EAAA,CAAA,EAAA,WAAAqQ,KAAAA,EAAAxQ,EAAU,EAAA,IAAAA,EAAS,GAAA,CAAA,IAAAA,SAAM,sBACzB,CAAA+F,GAAA5F,EAAA,CAAA,EAAA,QAAAA,EAAA,CAAA,EAAA,WAAAsQ,KAAAA,EAAAC,GAAArG,GAAkB,CAAArK,EAAO,GAAA,EAAAA,QAAIA,EAAc,EAAA,CAAA,CAAA,EAAA,+FAC/BA,EAAgB,EAAA,GAClCA,EAAgB,EAAA,EAAC,MAAQA,EAAK,GAAA,GAC9BA,EAAgB,EAAA,EAAC,MAAQA,EAAC,GAAA,CAAA,+FALIA,EAAC,GAAA,CAAA,MAAA2Q,yKAtB7B3Q,EAAgB,EAAA,GAAAyH,GAAAzH,CAAA,OAGdA,EAAI,GAAA,CAAA,aAAsBA,EAAE,GAAA,kBAAjC,OAAIwC,GAAA,EAAA,sLAJ4CxC,EAAK,GAAA,EAAG,IAAM,CAAC,UAAlEJ,EAoEIC,EAAAsQ,EAAApQ,CAAA,sFAnEEC,EAAgB,EAAA,4GAGdA,EAAI,GAAA,CAAA,qFAJuCA,EAAK,GAAA,EAAG,IAAM,CAAC,+BAI/D,OAAIwC,GAAA,gQAxEGxC,EAAc,EAAA,uKAJZA,EAAI,EAAA,IAAA,iBAAJA,EAAI,EAAA,GAEIA,EAAY,EAAA,IAAA,yBAAZA,EAAY,EAAA,GACJA,EAAe,EAAA,IAAA,iCAAfA,EAAe,EAAA,8PACjCA,EAAc,EAAA,iHAJZA,EAAI,EAAA,oDAEIA,EAAY,EAAA,6DACJA,EAAe,EAAA,0JAiJ1C,EAAAA,MAAiB,EACjB,EAAAA,MAAiB,EACf,IAAAA,MAAiB,2LASLA,EAAI,EAAA,EAAC,OAAS,EACd,gBAAAA,EAAK,EAAA,EAAA,CAAC,EAAE,OAAS,iFAZ/BG,EAAA,CAAA,EAAA,IAAAyQ,EAAA,EAAA5Q,MAAiB,GACjBG,EAAA,CAAA,EAAA,IAAAyQ,EAAA,EAAA5Q,MAAiB,GACfG,EAAA,CAAA,EAAA,IAAAyQ,EAAA,IAAA5Q,MAAiB,gTASLA,EAAI,EAAA,EAAC,OAAS,GACdG,EAAA,CAAA,EAAA,WAAAyQ,EAAA,gBAAA5Q,EAAK,EAAA,EAAA,CAAC,EAAE,OAAS,kLAQ/B,EAAAA,MAAmB,EACnB,EAAAA,MAAmB,kMAWL,GACA,gBAAAA,EAAK,EAAA,EAAA,CAAC,EAAE,OAAS,gGAb/BG,EAAA,CAAA,EAAA,KAAAyQ,EAAA,EAAA5Q,MAAmB,GACnBG,EAAA,CAAA,EAAA,KAAAyQ,EAAA,EAAA5Q,MAAmB,iRAYLG,EAAA,CAAA,EAAA,WAAAyQ,EAAA,gBAAA5Q,EAAK,EAAA,EAAA,CAAC,EAAE,OAAS,gMA5S7BqI,EAAArI,MAASA,EAAK,CAAA,EAAC,SAAW,GAAKA,EAAU,CAAA,GAAA6Q,GAAA7Q,CAAA,4EASpCA,EAAW,EAAA,0CADVA,EAAiB,EAAA,CAAA,EAoBtB,IAAA8Q,EAAA9Q,EAAS,CAAA,GAAAA,EAAM,CAAA,EAAA,SAAW,GAAC+Q,GAAA/Q,CAAA,KAKzBA,EAAgB,EAAA,GAAAgR,GAAA,OAGdhR,EAAQ,EAAA,CAAA,cAAsBA,EAAE,GAAA,kBAArC,OAAIwC,GAAA,EAAA,wDAwCCxC,EAAG,EAAA,CAAA,cAAsBA,EAAE,GAAA,kBAAhC,OAAIwC,GAAA,EAAA,sHAsBF,UACE,iBACO,iBACA,aAeH,WAAAxC,MAAK,0BAA0B,iKAqJzCA,EAAgB,EAAA,GAAAwH,GAAAxH,CAAA,EAmBhBiR,EAAAjR,QAAuB,MAAIyC,GAAAzC,CAAA,6eAlQTA,EAAa,EAAA,EAAC,QAAU,CAAC,wDAR/BA,EAAY,EAAA,EAAA,IAAA,8EADXA,EAAI,CAAA,CAAA,uDAnBtBJ,EAyQKC,EAAAqR,EAAAnR,CAAA,EAxQJ6C,EAaKsO,EAAAxB,CAAA,4CACL9M,EAyPKsO,EAAApB,CAAA,EA/OJlN,EAuEOkN,EAAAqB,CAAA,wBA/DNvO,EA0COuO,EAAArO,CAAA,EAzCNF,EAwCIE,EAAAsO,CAAA,kFAELxO,EAmBOuO,EAAApO,CAAA,EAlBNH,EAiBIG,EAAAsO,CAAA,kPA5FDrR,MAASA,EAAK,CAAA,EAAC,SAAW,GAAKA,EAAU,CAAA,qMA4BxCA,EAAS,CAAA,GAAAA,EAAM,CAAA,EAAA,SAAW,yDAKxBA,EAAgB,EAAA,wFAGdA,EAAQ,EAAA,CAAA,kFAwCRA,EAAG,EAAA,CAAA,sFAlDQA,EAAa,EAAA,EAAC,QAAU,CAAC,2GA0FjCG,EAAA,CAAA,EAAA,OAAAmR,GAAA,WAAAtR,MAAK,0BAA0B,gKAlG7BA,EAAY,EAAA,EAAA,IAAA,sEADXA,EAAI,CAAA,CAAA,EAwPjBA,EAAgB,EAAA,8GAmBhBA,QAAuB,kKAxPrB,OAAIwC,GAAA,0BAwCJ,OAAIA,GAAA,kYAzuBD,SAAA+O,IAAA,CACD,OAAA,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,EAAG,EAAE,WA62B7BpP,GAAK,CACnBA,EAAM,eAAc,EACpBA,EAAM,gBAAe,8BAz7BjB,CAAA,SAAAlB,CAAA,EAAAL,GACA,MAAA4Q,EAAuB,IAAA,EAAA5Q,GACvB,WAAA6Q,EAAa,EAAA,EAAA7Q,EACb,CAAA,QAAAuN,EAAA,EAAA,EAAAvN,EACA,CAAA,OAAA8Q,EAAA,EAAA,EAAA9Q,EACA,CAAA,UAAAgI,CAAA,EAAAhI,EACA,CAAA,UAAAiI,CAAA,EAAAjI,EACA,CAAA,iBAAAM,CAAA,EAAAN,GAMA,SAAAS,EAAW,EAAA,EAAAT,GACX,KAAA+Q,EAAO,EAAA,EAAA/Q,EACP,CAAA,KAAAU,CAAA,EAAAV,EACA,CAAA,KAAAsI,CAAA,EAAAtI,GAEA,WAAA0C,EAAa,GAAA,EAAA1C,GACb,YAAAQ,EAAc,EAAA,EAAAR,EACd,CAAA,cAAAgR,EAAA,EAAA,EAAAhR,GACA,iBAAAiR,EAAmB,EAAA,EAAAjR,EACnB,CAAA,OAAAkR,EAAA,EAAAlR,EACA,CAAA,eAAAmR,CAAA,EAAAnR,GACA,uBAAAgJ,EAAyB,EAAA,EAAAhJ,GACzB,iBAAAiJ,EAAmB,EAAA,EAAAjJ,GACnB,gBAAAoR,EAAkB,EAAA,EAAApR,GAClB,UAAAW,EAAgC,MAAA,EAAAX,EAEvC2J,EAAA,CAAA,EAEA5G,EAAmC,IAM5B,cAAA7C,EAAmC,IAAA,EAAAF,GACnC,QAAAG,EAA6B,IAAA,EAAAH,EACpCqR,GACAC,EAAA,CAAA,QAME1Q,GAAWC,SAMb0Q,EAAwB,GACxBhR,GAAiB,GACjBiR,GAA8B,GAC9BC,GAAkC,GAClCC,EAKO,KACPC,EAIO,KACPzI,EAAgB,GAChB0I,EAAW,GAET,MAAAC,EAAA,CAAezN,EAAawF,IACjCpD,IAAOpC,CAAG,IAAIwF,CAAG,GAAG,eAMZuE,GAAa2D,EAAA,KACjBxN,EAAKwN,GAAA,GACL,GAAA9J,EAAU,CAAC,IAAM,SAAW1D,EAAG,OAAS0D,EAAU,CAAC,EAAA,CAChD,MAAA+J,EAAO,MAAM/J,EAAU,CAAC,EAAI1D,EAAG,MAAM,EACzC,KAAK,EAAE,EACP,IAAK,CAAAyG,EAAGnJ,IAAS,GAAAA,EAAI0C,EAAG,MAAM,EAAA,EAChCA,EAAKA,EAAG,OAAOyN,CAAI,EAGf,MAAA,CAAAzN,GAAMA,EAAG,SAAW,EACjB,MAAM0D,EAAU,CAAC,CAAA,EACtB,KAAK,CAAC,EACN,KAAK+C,EAAGnJ,IAAA,OACFoQ,EAAMrB,KACZ,OAAAtP,EAAA,GAAAiQ,EAAIU,CAAG,EAAA,CAAM,KAAM,KAAM,MAAO,IAAA,EAAAV,CAAA,EACvB,CAAA,GAAIU,EAAK,MAAO,KAAK,UAAUpQ,EAAI,CAAC,KAIzC0C,EAAG,KAAKmJ,EAAG7L,IAAA,OACXoQ,EAAMrB,KACZ,OAAAtP,EAAA,GAAAiQ,EAAIU,CAAG,EAAA,CAAM,KAAM,KAAM,MAAO,IAAA,EAAAV,CAAA,GACvB,GAAIU,EAAK,MAAOvE,GAAK,EAAA,aAIvBwE,GAAaC,EAAA,CAIf,MAAAC,EAAkBD,EAAQ,cACzB,MAAMjK,EAAU,CAAC,IAAM,QAAUA,EAAU,CAAC,EAAIkK,CAAe,EACpE,KAAK,CAAC,EACN,IAAA,CAAKpH,EAAGnJ,IACR,MACCoG,EAAU,CAAC,IAAM,QACdA,EAAU,CAAC,EACXmK,EAAkB,EACjBD,EAAQ,CAAC,EAAE,OACX3E,EAAQ,MAAA,EAEX,KAAK,CAAC,EACN,IAAA,CAAKxC,EAAGF,KAAA,OACFe,GAAK+E,KACX,OAAAtP,EAAA,GAAAiQ,EAAI1F,EAAE,EAAI0F,EAAI1F,EAAE,GAAO,CAAA,MAAO,KAAM,KAAM,IAAA,EAAA0F,CAAA,EACpC,CAAQ,MAAOY,IAAUtQ,CAAC,IAAIiJ,EAAC,GAAK,GAAI,GAAAe,OAO/C,IAAAwG,EAAWjE,GAAaZ,CAAO,EAC/B8E,GAAwB9E,EASxB/G,EAAA,CAAA,CAAA,CAAA,EACA8L,GAOAC,GAAmBH,EAAS,IAAK3E,GAAMA,EAAE,KAAK,EAC9C+E,GAAgBhM,EAAK,IAAKpC,GAAQA,EAAI,IAAKsF,GAAS,OAAOA,EAAK,KAAK,CAAA,CAAA,EAE1D,eAAA+I,IAAA,CACR,MAAAC,EAAkBN,EAAS,IAAK3E,GAAMA,EAAE,KAAK,EAC7CkF,EAAenM,EAAK,IAAKpC,GAC9BA,EAAI,IAAKsF,GAAS,OAAOA,EAAK,KAAK,CAAA,CAAA,GAIlC,CAAAgG,GAAOiD,EAAcH,EAAa,GAClC,CAAA9C,GAAOgD,EAAiBH,EAAgB,KAIzC3R,GAAS,SAAA,CACR,KAAM4F,EAAK,IAAKpC,GAAQA,EAAI,IAAKsF,GAASA,EAAK,KAAK,CAAA,EACpD,QAAS0I,EAAS,IAAK3E,GAAMA,EAAE,KAAK,EACpC,SAAU,OAEN2D,GACJxQ,GAAS,OAAO,EAEjB4R,GAAgBG,EAChBJ,GAAmBG,GAIZ,SAAAE,GACRC,EACAC,EACA9N,EAAA,KAEK8N,EAAc,MAAA,OACf,GAAAvF,EAAQuF,CAAK,IAAMD,EAAA,CAClB,GAAA7N,IAAc,MAAc,MAAA,YAC5B,GAAAA,IAAc,MAAc,MAAA,aAE1B,MAAA,sBAIO1D,GAAeC,EAAA,CACzB,GAAAkQ,KAAoB,IAASD,KAAgB,UACxCjQ,EAAM,IAAA,CACR,IAAA,YACJF,EAAA,GAAA0B,EAAA,CAAY,EAAG0O,EAAe,CAAA,OAC9BA,GAAkB,EAAA,SAEd,IAAA,YACJpQ,EAAA,GAAAoQ,GACCA,GAAkB,EAAIA,GAAkB,EAAIA,EAAA,SAEzC,IAAA,kBACJA,GACCA,GAAkBW,EAAS,OAAS,EACjCX,GAAkB,EAClBA,EAAA,SAEA,IAAA,SACJlQ,EAAM,eAAA,OACNkQ,GAAkB,EAAA,QAEd,IAAA,QACJlQ,EAAM,eAAA,WAKLA,EAAM,MAAQ,UAAYA,EAAM,MAAQ,YAAA,CACtC,GAAA,CAAAd,EAAA,OAED,GAAA8Q,EAAA,CACI,KAAA,CAAAnN,EAAKwF,CAAG,EAAI2H,EACbwB,GAAWzB,EAAI9K,EAAKpC,CAAG,EAAEwF,CAAG,EAAE,EAAE,EAAE,SACpCmJ,IAAYA,GAAS,iBAAmBA,GAAS,cAIpDxR,EAAM,MAAQ,UACdwR,IAAU,iBAAmBA,IAAU,MAAM,QAI1CxR,EAAM,MAAQ,aAAewR,IAAU,iBAAmB,SAK/DxR,EAAM,eAAA,EACFoI,EAAe,OAAS,SAC3BnD,EAAOwE,GAAkBxE,EAAMmD,CAAc,CAAA,EAC7C/I,GAAS,SAAA,CACR,KAAM4F,EAAK,IAAKpC,GAAQA,EAAI,IAAKsF,GAASA,EAAK,KAAK,CAAA,EACpD,QAAS0I,EAAS,IAAK3E,GAAMA,EAAE,KAAK,EACpC,SAAU,OAEN2D,GACJxQ,GAAS,OAAO,UAMf,GAAAW,EAAM,MAAQ,MAAQA,EAAM,SAAWA,EAAM,SAAA,CAChDA,EAAM,eAAA,EACFoI,EAAe,OAAS,GACrB,MAAAJ,GAAA,SAKH,GAAA,CAAAxG,SAIE,KAAA,CAAAnB,EAAGiJ,CAAC,EAAI9H,SAEPxB,EAAM,IAAA,CACR,IAAA,aACA,IAAA,YACA,IAAA,YACA,IAAA,UACA,GAAAgQ,EAAA,MACJhQ,EAAM,eAAA,EACA,MAAAyR,EAAczH,GAAYhK,EAAM,IAAA,CAAMK,EAAGiJ,CAAC,EAAGrE,CAAI,EACnDwM,GACCzR,EAAM,eACToI,EAAiBQ,GAChBR,EAAe,OAAS,EAAIA,EAAe,CAAC,EAAA,CAAK/H,EAAGiJ,CAAC,EACrDmI,CAAA,CAAA,OAEDzB,EAAU,EAAA,IAEVlQ,EAAA,GAAAsI,EAAA,CAAkBqJ,CAAW,CAAA,OAC7BzB,EAAUyB,CAAA,OACVzS,GAAiB,EAAA,QAElBwC,EAAWiQ,CAAA,GAEXA,IAAgB,IAChBzR,EAAM,MAAQ,WACdK,IAAM,SAEN6P,GAAkB5G,CAAA,OAClB9H,EAAW,EAAA,OACXwO,EAAU,EAAA,SAIP,IAAA,SACC,GAAA,CAAA9Q,EAAA,MACLc,EAAM,eAAA,OACNgQ,EAAU,EAAA,QAEN,IAAA,QACC,GAAA,CAAA9Q,EAAA,SACLc,EAAM,eAAA,EAEFA,EAAM,SACT0R,GAAQrR,CAAC,EACH,MAAAyC,GAAA,OAENtB,EAAY,CAAAnB,EAAI,EAAGiJ,CAAC,CAAA,UAEhB6E,GAAO6B,EAAA,CAAU3P,EAAGiJ,CAAC,CAAA,EAAA,CAClB,MAAAqI,GAAU1M,EAAK5E,CAAC,EAAEiJ,CAAC,EAAE,GACrBkI,GAAWzB,EAAI4B,EAAO,EAAE,MAC1BH,IACH1R,EAAA,GAAAmF,EAAK5E,CAAC,EAAEiJ,CAAC,EAAE,MAAQkI,GAAS,MAAAvM,CAAA,OAE7B+K,EAAU,EAAA,EACJ,MAAAlN,GAAA,EACNhD,EAAA,GAAA0B,EAAA,CAAYnB,EAAGiJ,CAAC,CAAA,OAEhBxJ,EAAA,GAAAkQ,EAAA,CAAW3P,EAAGiJ,CAAC,CAAA,OACftK,GAAiB,EAAA,QAIf,IAAA,MACJgB,EAAM,eAAA,OACNgQ,EAAU,EAAA,EACJ,MAAA4B,EAAYhI,GAChB,CAAAvJ,EAAGiJ,CAAC,EACLrE,EACAjF,EAAM,QAAA,EAEH4R,IACH9R,EAAA,GAAAsI,EAAA,CAAkBwJ,CAAS,CAAA,OAC3BpQ,EAAWoQ,CAAA,EACP1S,SACH8Q,EAAU4B,CAAA,OACV5S,GAAiB,EAAA,kBAKd,GAAA,CAAAE,EAAA,QAEF8Q,GAAYA,GAAW7B,GAAO6B,EAAU,CAAA3P,EAAGiJ,CAAC,CAC9C,IAAAtJ,EAAM,IAAI,SAAW,SAErBhB,GAAiB,EAAA,EACjBc,EAAA,GAAAkQ,EAAA,CAAW3P,EAAGiJ,CAAC,CAAA,IAMf,IAAAuI,GACAC,YAEKC,GAAY1J,EAAA,CACT,OAAAyJ,IAAY,UAAYA,KAAYzJ,QAC9CwJ,GAAiB,KAAA,OACjBC,GAAUzJ,CAAA,GAENwJ,KAAmB,WACtBA,GAAiB,KAAA,EACPA,KAAmB,YAC7BA,GAAiB,KAAA,EAKL,eAAAG,GAAY3R,EAAW4R,EAAU,GAAA,CAC1C,CAAA/S,GAAYuH,EAAU,CAAC,IAAM,WAAawJ,KAAgB5P,SAC/DmB,EAAW,EAAA,EACX1B,EAAA,GAAAsI,EAAA,CAAA,CAAA,OACA8H,GAAkB7P,CAAA,OAClB4P,GAAc5P,CAAA,YAGN6R,GAAgBlS,EAAA,CACnB,GAAAd,EAEG,OAAAc,EAAM,OAAO,IAAA,CACf,IAAA,SACA,IAAA,QACA,IAAA,MACJA,EAAM,eAAA,OACNwB,EAAW,EAAA,OACX0O,GAAkBD,EAAA,OAClBA,GAAc,EAAA,EACdrF,GAAO,MAAA,wBAKK8G,GAAQjN,EAAA,CAGlB,GAFJmG,GAAO,MAAA,EAEHlE,EAAU,CAAC,IAAM,UAAA,OACjB,GAAAzB,EAAK,SAAW,EAAA,CACnBnF,EAAA,EAAAyP,EAAA,CAAU,MAAMvD,EAAQ,MAAM,EAAE,KAAK,EAAE,CAAA,CAAA,eAIlCmG,EAAU,MAAMlN,EAAK,CAAC,EAAE,MAAM,EAClC,KAAK,CAAC,EACN,IAAA,CAAKuE,EAAGnJ,IAAA,OACFoQ,EAAMrB,KACZ,OAAAtP,EAAA,GAAAiQ,EAAIU,CAAG,EAAA,CAAM,KAAM,KAAM,MAAO,IAAA,EAAAV,CAAA,EACvB,CAAA,GAAIU,EAAK,MAAO,EAAA,IAGvBhM,IAAA,QAAuBA,GAAS,GAAKA,GAASQ,EAAK,OACtDA,EAAK,OAAOR,EAAO,EAAG0N,CAAO,EAE7BlN,EAAK,KAAKkN,CAAO,0BAIlBrS,EAAA,GAAA0B,EAAA,CAAYiD,WAAsBA,EAAQQ,EAAK,OAAS,EAAG,CAAC,CAAA,iBAK9CmN,GAAQ3N,EAAA,CAElB,GADJmG,GAAO,MAAA,EACHnE,EAAU,CAAC,IAAM,UAAA,OAEf,MAAA4L,EAAe5N,IAAU,OAAYA,EAAQQ,EAAK,CAAC,EAAE,eAElD5E,EAAI,EAAGA,EAAI4E,EAAK,OAAQ5E,IAAA,OAC1BoQ,EAAMrB,KACZtP,EAAA,GAAAiQ,EAAIU,CAAG,EAAA,CAAM,KAAM,KAAM,MAAO,IAAA,EAAAV,CAAA,EAChC9K,EAAK5E,CAAC,EAAE,OAAOgS,EAAc,EAAK,CAAA,GAAI5B,EAAK,MAAO,EAAA,CAAA,EAGnDzE,EAAQ,OAAOqG,EAAc,EAAa,UAAArG,EAAQ,OAAS,CAAC,EAAA,kCAKtD,MAAAlJ,GAAA,EAEN,sBAAA,IAAA,CACCkP,GAAYK,EAAc,EAAI,EACxB,MAAAC,EAAQ1H,GAAO,iBAAiB,OAAO,EAAE,CAAC,EAAE,YAClDA,GAAO,iBAAiB,OAAO,EAAE,CAAC,EAAE,UAAW,KAAM0H,CAAA,CAAA,aAI9C3H,GAAqB3K,EAAA,CACzBuS,GAA0BvS,EAAO4K,EAAM,SAC1CoF,EAAU,EAAA,EACVlQ,EAAA,GAAAsI,EAAA,CAAA,CAAA,OACA6H,GAAc,EAAA,OACdC,GAAkB,EAAA,OAClBC,EAAmB,IAAA,OACnBC,EAAqB,IAAA,GAOnB,IAAA/G,GAAA,CAAA,EACAuB,GACAlK,GAEK,SAAA8R,IAAA,OACFC,EAASpJ,GAAM,KAAK7J,EAAIa,IACtBb,GAAI,aAAe,GAEvB,GAAAiT,EAAO,SAAW,UACbpS,EAAI,EAAGA,EAAIoS,EAAO,OAAQpS,IAClCuK,GAAO,MAAM,4BACIvK,CAAC,GAAA,GACdoS,EAAOpS,CAAC,EAAIqS,GAAkBD,EAAO,MAAM,IAAA,MAK7CE,GACHpD,EAAO,MAAM,EAAIpO,EAAaoO,EAAO,OAAU,EAAE,EAAE,OAAS,GAAK,GAC9DmD,GAAkB,WAEbE,GACRnI,EACAoI,EACAC,EACAzK,EACA8B,EAAA,KAEIE,GAAK,KAKE,GAHP7I,GAAYA,EAAS,CAAC,IAAKyD,GAAQzD,EAAS,CAAC,IAAKyD,EAAKzD,EAAS,CAAC,CAAA,IACpE6I,GAAKpF,EAAKzD,EAAS,CAAC,CAAG,EAAAA,EAAS,CAAC,CAAG,EAAA,IAE1B,OAAA6G,GAAQ,UAAa,CAAA8B,eAG1B4I,GAAc,CAAA,GAAA,MAAMtI,EAAM,MAAM,EAAE,KAAA,CAAA,KAEpCN,IAAQ,MACX4I,GAAQ,KAAM,CAAA1S,GAAGiJ,KAChBmB,EAAMpK,EAAC,EAAEgI,CAAG,EAAE,MAAQoC,EAAMnB,EAAC,EAAEjB,CAAG,EAAE,SAAa,CAAA,UAExC8B,IAAQ,MAClB4I,GAAQ,KAAM,CAAA1S,GAAGiJ,KAChBmB,EAAMpK,EAAC,EAAEgI,CAAG,EAAE,MAAQoC,EAAMnB,EAAC,EAAEjB,CAAG,EAAE,SAAa,CAAA,cAO7C,MAAA2K,GAAA,CAAA,GAAgBvI,CAAK,EACrBwI,GAAqBJ,EAAA,CAAA,GAAqBA,CAAc,EAAI,KAC5DK,GAAeJ,EAAA,CAAA,GAAeA,CAAQ,EAAI,KAW5C,GAVJC,GAAQ,SAASI,GAAeC,KAAA,CAC/B3I,EAAM2I,EAAW,EAAIJ,GAAUG,EAAa,EACxCN,GAAkBI,KACrBJ,EAAeO,EAAW,EAAIH,GAAmBE,EAAa,GAC3DL,GAAYI,KACfJ,EAASM,EAAW,EAAIF,GAAaC,EAAa,6BAKhD9I,GAAA,CACI,KAAA,CAAAhK,GAAGiJ,EAAC,EAAIc,GAAoBC,GAAIpF,CAAI,EAC3CnF,EAAA,GAAA0B,EAAA,CAAYnB,GAAGiJ,EAAC,CAAA,OAQd+J,GAAa,GAEjBtO,GAAA,IAAA,CACO,MAAAuO,EAAA,IAAe,qBAAsBC,GAAA,CAC1CA,EAAQ,QAASC,GAAA,CACZA,EAAM,gBAAmB,CAAAH,KAC5Bb,8BAGDa,GAAaG,EAAM,mBAIrB,OAAAF,EAAS,QAAQ1I,EAAM,EACvB,SAAS,iBAAiB,QAASD,EAAoB,EACvD,OAAO,iBAAiB,SAAU8I,EAAa,EAC/C,SAAS,iBAAiB,mBAAoBC,EAAwB,OAGrEJ,EAAS,WAAA,EACT,SAAS,oBAAoB,QAAS3I,EAAoB,EAC1D,OAAO,oBAAoB,SAAU8I,EAAa,EAClD,SAAS,oBACR,mBACAC,EAAA,KAKM,SAAAC,GACR3T,EACA6C,EACAwF,EAAA,CAEArI,EAAM,eAAA,EACNA,EAAM,gBAAA,OACNhB,GAAiB,EAAA,OACjBmR,EAAmB,IAAA,OACnBC,EAAqB,IAAA,OACrBF,GAAkB,EAAA,OAClBD,GAAc,EAAA,EAEdnQ,EAAA,GAAAsI,EAAiBmB,GAAkB,CAAA1G,EAAKwF,CAAG,EAAGD,EAAgBpI,CAAK,CAAA,EAE/DoI,EAAe,SAAW,GAAKlJ,GAClCY,EAAA,GAAAkQ,EAAA,CAAWnN,EAAKwF,CAAG,CAAA,EACnBvF,GAAO,EAAA,KAAA,IAAA,CACA,MAAA0O,EAAWzB,EAAI9K,EAAKpC,CAAG,EAAEwF,CAAG,EAAE,EAAE,EAAE,MACpCmJ,IACHA,EAAS,MAAA,EACTA,EAAS,eAAiBA,EAAS,aAClCA,EAAS,MAAM,gBAIlBxB,EAAU,EAAA,EAGX4D,GAAmB/Q,EAAKwF,CAAG,EAE3BhJ,GAAS,SAAA,CACR,MAAA,CAAQwD,EAAKwF,CAAG,EAChB,MAAOiI,EAAYzN,EAAKwF,CAAG,EAC3B,UAAWpD,EAAKpC,CAAG,EAAE,IAAKgR,GAAMA,EAAE,KAAK,IAIhC,SAAAC,GAAiB9T,EAAmB6C,EAAawF,EAAA,CAGxD,GAFDrI,EAAM,gBAAA,EAELmQ,GACAA,EAAiB,MAAQtN,GACzBsN,EAAiB,MAAQ9H,OAEzB8H,EAAmB,IAAA,aAEbhI,EAAQnI,EAAM,OAAuB,QAAQ,IAAI,EACnD,GAAAmI,EAAA,CACG,MAAAhD,EAAOgD,EAAK,wBAClBrI,EAAA,GAAAqQ,EAAA,CAAqB,IAAAtN,EAAK,IAAAwF,EAAK,EAAGlD,EAAK,MAAO,EAAGA,EAAK,MAAA,CAAA,IAKhD,SAAA4O,GAAWtP,EAAeuP,EAAA,OAC5BC,EAAYD,IAAa,QAAUvP,EAAQA,EAAQ,EACzDiN,GAAQuC,CAAS,OACjB9D,EAAmB,IAAA,OACnBC,EAAqB,IAAA,EAGb,SAAA8D,GAAWzP,EAAeuP,EAAA,OAC5BG,EAAYH,IAAa,OAASvP,EAAQA,EAAQ,EACxD2N,GAAQ+B,CAAS,OACjBhE,EAAmB,IAAA,OACnBC,EAAqB,IAAA,EAGb,SAAAqD,IAAA,MACRtD,EAAmB,IAAA,OACnBC,EAAqB,IAAA,EACrBoC,SAGG4B,GAIO,cAEFC,GAAqBhM,EAAA,CAC7B+L,GACCA,IAAe,OAAS,UAAYA,GAAc,MAAQ/L,EACvD,KACE,CAAA,KAAM,SAAU,IAAAA,GAGd,SAAAuL,GAAmB/Q,EAAawF,EAAA,CACxC+L,GACCA,IAAe,OAAS,QACxBA,GAAc,MAAQvR,GACtBuR,GAAc,MAAQ/L,EACnB,KACE,CAAA,KAAM,OAAQ,IAAAxF,EAAK,IAAAwF,CAAA,EAGjB,SAAAiM,IAAA,CACH,SAAS,mBAIb,SAAS,eAAA,OACT3M,EAAgB,EAAA,IAJhBiD,GAAO,kBAAA,OACPjD,EAAgB,EAAA,GAOT,SAAA+L,IAAA,CACR5T,EAAA,GAAA6H,EAAA,CAAA,CAAkB,SAAS,iBAAA,EAGb,eAAAK,IAAA,OACR+D,GAAgB9G,EAAM4L,EAAUzI,CAAc,EAG5C,SAAAmM,GAAmBvU,EAAmBqI,EAAA,CAE1C,GADJrI,EAAM,gBAAA,EACFoQ,GAAsBA,EAAmB,MAAQ/H,OACpD+H,EAAqB,IAAA,aAEfvR,EAAUmB,EAAM,OAAuB,QAAQ,IAAI,EACrD,GAAAnB,EAAA,CACG,MAAAsG,EAAOtG,EAAO,wBACpBiB,EAAA,GAAAsQ,EAAA,CAAuB,IAAA/H,EAAK,EAAGlD,EAAK,MAAO,EAAGA,EAAK,MAAA,CAAA,IAKtDqP,GAAA,IAAA,MACC3E,EAAkB,EAAA,mBAGJ4E,GAAWhQ,EAAA,CACzBmG,GAAO,MAAA,EACHlE,EAAU,CAAC,IAAM,YACjBzB,EAAK,QAAU,IACnBA,EAAK,OAAOR,EAAO,CAAC,+BAEpBjD,EAAW,EAAA,mBAGGkT,GAAWjQ,EAAA,CACzBmG,GAAO,MAAA,EACHnE,EAAU,CAAC,IAAM,YACjBxB,EAAK,CAAC,EAAE,QAAU,IAEtB4L,EAAS,OAAOpM,EAAO,CAAC,2BAGxBQ,EAAK,QAASpC,GAAA,CACbA,EAAI,OAAO4B,EAAO,CAAC,iCAGpBjD,EAAW,EAAA,aAGHmT,GAAclQ,EAAA,CACtBgQ,GAAWhQ,CAAK,OAChB0L,EAAmB,IAAA,OACnBC,EAAqB,IAAA,WAGbwE,GAAcnQ,EAAA,CACtBiQ,GAAWjQ,CAAK,OAChB0L,EAAmB,IAAA,OACnBC,EAAqB,IAAA,eAISoC,kDAiFGnJ,GAAMC,CAAC,EAAApJ,2BArDrB4P,GAAM9K,GAAA,QAAA,IAAA,IAAA,GAAA,gEACbtE,GAAKR,gCAsME2U,EAAA,GAAA,UAAA5P,EAAKR,CAAK,EAAE6E,CAAC,EAAE,MAAK5K,CAAA,IAApBuG,EAAKR,CAAK,EAAE6E,CAAC,EAAE,MAAK5K,2DACvBqR,EAAI1F,CAAE,EAAE,MAAK3L,CAAA,IAAbqR,EAAI1F,CAAE,EAAE,MAAK3L,yBAQrBoB,EAAA,GAAAd,GAAiB,EAAK,EACtB4L,GAAO,MAAK,cAGN,MAAA/H,EAAM4B,EACN4D,EAAMiB,EAEVlB,EAAe,KAAO,CAAA,CAAAE,EAAGC,EAAC,IAAMD,IAAMzF,GAAO0F,KAAMF,CAAG,QAEvDD,EAAc,CAAA,CAAKvF,EAAKwF,CAAG,CAAA,CAAA,GAUjByM,GAAA,CAAArQ,EAAA6E,EAAAtJ,IAAU8T,GAAiB9T,EAAOyE,EAAO6E,CAAC,UArDxCtJ,IAAK,CACd,MAAA+U,EAAQ/U,EAAM,QAAQ,CAAC,EACvBgV,EAAU,IAAO,WAAW,SACjC,QAASD,EAAM,QACf,QAASA,EAAM,QACf,QAAS,GACT,WAAY,GACZ,KAAM,SAEPpB,GAAkBqB,EAAYvQ,EAAO6E,CAAC,GAM5B2L,GAAA,CAAAxQ,EAAA6E,EAAAtJ,IAAU2T,GAAkB3T,EAAOyE,EAAO6E,CAAC,kCApEvCuH,EAASxQ,CAAC,EAAE,MAAK3B,CAAA,IAAjBmS,EAASxQ,CAAC,EAAE,MAAK3B,4DACpBqR,EAAI1F,CAAE,EAAE,MAAK3L,CAAA,IAAbqR,EAAI1F,CAAE,EAAE,MAAK3L,WAKH,MAAAwW,GAAA7U,GAAA2R,GAAY3R,CAAC,QAUrBL,IAAK,CACfA,EAAM,gBAAe,EACrB+R,GAAY1R,CAAC,GAkBH8U,GAAA,CAAA9U,EAAAL,IAAUuU,GAAmBvU,EAAOK,CAAC,SA3ClDgU,GAAqBhU,CAAC,kBAnBd4E,EAAIvG,yCAEIiU,GAAYjU,0BACJgU,GAAehU,sCAnBhC,MAAA0W,GAAA,CAAA,CAAA,OAAAC,CAAM,IACjB1I,GACC0I,EAAO,KACP5O,EACCuG,SACA6D,EAAWjE,GAAaI,CAAI,CAAA,EACrB6D,GAEPyE,GAAI,CACJxV,EAAA,EAAAyP,EAAS+F,CAAI,+CAlGN1K,GAAM1K,sBAKJ6D,GAAMhE,GAAegE,CAAC,EA6PXwR,GAAA,IAAAxB,GAAW5D,GAAkB,KAAO,EAAG,OAAO,EAC9CqF,GAAA,IAAAzB,GAAW5D,GAAkB,KAAO,EAAG,OAAO,EAC5CsF,GAAA,IAAAvB,GAAW/D,GAAkB,KAAO,EAAG,MAAM,EAC5CuF,GAAA,IAAAxB,GAAW/D,GAAkB,KAAO,EAAG,OAAO,EACpDwF,GAAA,IAAAhB,GAAcxE,GAAkB,KAAO,CAAC,EACxCyF,GAAA,IAAAhB,GAAczE,GAAkB,KAAO,CAAC,EAerC0F,GAAA,IAAA9B,GAAW5D,GAAkB,KAAQ,GAAG,OAAO,EAC/C2F,GAAA,IAAA/B,GAAW5D,GAAkB,KAAQ,GAAG,OAAO,EAC7C4F,GAAA,IAAA7B,GAAW9D,GAAoB,KAAQ,GAAG,MAAM,EAEzE4F,GAAA,IAAA9B,GAAW9D,GAAoB,KAAQ,GAAG,OAAO,EAC7B6F,GAAA,IAAAtB,GAAcxE,GAAkB,OAAS,EACzC+F,GAAA,IAAAtB,GAAcxE,GAAoB,OAAS,i+BAl/BjEtQ,EAAA,GAAGsI,MAAqBA,CAAc,CAAA,yBAEnCtI,EAAA,GAAA0B,EACF4G,EAAe,OAAS,EACrBA,EAAeA,EAAe,OAAS,CAAC,EACxC,EAAA,6CAkGE+F,GAAOnC,EAAS8E,EAAW,IAC/BhR,EAAA,GAAA+Q,EAAWjE,GAAaZ,CAAO,CAAA,EAC/BlM,EAAA,GAAAgR,GAAc,KAAK,MAAM,KAAK,UAAU9E,CAAO,CAAA,CAAA,sCAOzCmC,GAAOoB,EAAQwB,EAAO,IAC7BjR,EAAA,GAAAmF,EAAOyL,GAAanB,CAA+B,CAAA,EACnDzP,EAAA,GAAAiR,GAAU,KAAK,MAAM,KAAK,UAAUxB,CAAM,CAAA,CAAA,6BAwRvCtK,GAAQ4L,IAAaK,6BAuCtBpR,EAAA,GAAAkL,EAAMF,GAAQ7F,CAAI,CAAA,2BAElBoE,GAAM,CAAC,GAAKmJ,8BAuEZI,GAAU3N,EAAMtG,EAAeC,EAASkT,GAASD,EAAc,mBAE/D/R,EAAA,GAAAqW,EAAA,CAAA,CAAmB3U,GAAYA,EAAS,CAAC,CAAA,2zFC9e/B,WAAA3D,MAAO,YACb,CAAA,KAAAA,MAAO,IAAI,EACbA,EAAc,EAAA,8MASVA,EAAW,EAAA,4CAGVA,EAAQ,EAAA,2DAUPA,EAAW,EAAA,mBAEf,KAAAA,MAAO,qcA1BD,WAAAA,MAAO,YACbG,EAAA,CAAA,EAAA,OAAA,CAAA,KAAAH,MAAO,IAAI,kBACbA,EAAc,EAAA,CAAA,8LASVA,EAAW,EAAA,sGAGVA,EAAQ,EAAA,2HAUPA,EAAW,EAAA,qCAEfG,EAAA,CAAA,EAAA,QAAAoY,EAAA,KAAAvY,MAAO,ohBAnCL,4CAGE,8CAGK,uaA3DL,CAAA,QAAAmO,EAAA,EAAA,EAAAvN,GACA,QAAA4X,EAAU,EAAA,EAAA5X,EACV,CAAA,aAAA6X,EAAA,EAAA,EAAA7X,GACA,QAAA2D,EAAU,EAAA,EAAA3D,EACV,CAAA,MAAAC,EAAA,CACV,KAAQ,CAAA,CAAA,GAAI,GAAI,EAAE,CAAA,EAClB,QAAU,CAAA,IAAK,IAAK,GAAG,EACvB,SAAU,UAEA,gBAAAmR,EAAkB,EAAA,EAAApR,EAClB,CAAA,UAAAgI,CAAA,EAAAhI,EACA,CAAA,UAAAiI,CAAA,EAAAjI,GACA,MAAA4Q,EAAuB,IAAA,EAAA5Q,GACvB,WAAA6Q,EAAa,EAAA,EAAA7Q,EACb,CAAA,KAAA+Q,CAAA,EAAA/Q,EACA,CAAA,SAAAK,CAAA,EAAAL,GACA,MAAA8X,EAAuB,IAAA,EAAA9X,GACvB,UAAA+X,EAAgC,MAAA,EAAA/X,EAChC,CAAA,KAAAU,EAAA,EAAAV,GAEA,YAAAQ,EAAc,EAAA,EAAAR,EACd,CAAA,cAAAgR,EAAA,EAAA,EAAAhR,EACA,CAAA,OAAAgY,CAAA,EAAAhY,EAMA,CAAA,iBAAAM,CAAA,EAAAN,GAKA,WAAA0C,EAAiC,MAAA,EAAA1C,EACjC,CAAA,eAAAiY,CAAA,EAAAjY,EACA,CAAA,YAAAkY,CAAA,EAAAlY,GACA,uBAAAgJ,EAAyB,EAAA,EAAAhJ,GACzB,UAAAW,EAAgC,MAAA,EAAAX,GAChC,iBAAAiJ,GAAmB,EAAA,EAAAjJ,EA2BN,MAAAmY,EAAA,IAAAH,EAAO,SAAS,eAAgBC,CAAc,EA0BzDnB,GAAA,IAAAsB,IAASJ,EAAO,OAAO,UAAUI,CAAI,EAC7BrB,EAAA,IAAAqB,IAASJ,EAAO,OAAO,UAAUI,CAAI,qCAf7C9S,GAAC,KACZrF,EAAQqF,EAAE,MAAM,EAChB0S,EAAO,SAAS,QAAQ,GAEdK,GAAA/S,GAAM0S,EAAO,SAAS,OAAO,IAC5B1S,GAAM0S,EAAO,SAAS,SAAU1S,EAAE,MAAM,2/BA1ClDjE,EAAA,GAAA+Q,EAAA,CAAA,GAAgBnS,EAAM,SAAWsN,CAAQ,CAAA,mBAC5ClM,EAAA,GAAGiX,EAAcrY,EAAM,KAAW,CAAA,GAAAA,EAAM,IAAI,EAAA,CAAA,CAAA,mBACzCoB,EAAA,GAAAnB,EAAgBD,GAAO,UAAU,cAC7B,CAAA,GAAAA,GAAO,UAAU,aAAa,EAClC,IAAA,yBACAoB,EAAA,GAAAlB,EAAA,CACD+X,GAAejY,GAAO,UAAU,QAC1B,CAAA,GAAAA,GAAO,UAAU,OAAO,EAC5B,IAAA"}